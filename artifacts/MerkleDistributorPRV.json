{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "windowIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accountIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        }
      ],
      "name": "ClaimDelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8[]",
          "name": "windowIndexes",
          "type": "uint8[]"
        },
        {
          "indexed": false,
          "internalType": "uint16[]",
          "name": "accountIndexes",
          "type": "uint16[]"
        }
      ],
      "name": "ClaimDelegatedMulti",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "windowIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accountIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "windowIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        }
      ],
      "name": "CreatedWindow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "DelegateAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "DelegateRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "whitelisted",
          "type": "bool"
        }
      ],
      "name": "DelegateWhitelistChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "windowIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "DeleteWindow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lockBlock",
          "type": "uint256"
        }
      ],
      "name": "LockSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "WithdrawRewards",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "windowIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accountIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "internalType": "struct IMerkleDistributorCore.Claim",
          "name": "_claim",
          "type": "tuple"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "windowIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accountIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "internalType": "struct IMerkleDistributorCore.Claim",
          "name": "_claim",
          "type": "tuple"
        }
      ],
      "name": "claimDelegated",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "windowIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accountIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "internalType": "struct IMerkleDistributorCore.Claim[]",
          "name": "claims",
          "type": "tuple[]"
        }
      ],
      "name": "claimMulti",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "windowIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accountIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "internalType": "struct IMerkleDistributorCore.Claim[]",
          "name": "claims",
          "type": "tuple[]"
        }
      ],
      "name": "claimMultiDelegated",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_windowIndex",
          "type": "uint256"
        }
      ],
      "name": "deleteWindow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_windowIndex",
          "type": "uint256"
        }
      ],
      "name": "getWindow",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "ipfsHash",
              "type": "string"
            }
          ],
          "internalType": "struct IMerkleDistributorCore.Window",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "hasDelegatedRewards",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_windowIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_accountIndex",
          "type": "uint256"
        }
      ],
      "name": "isClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        }
      ],
      "name": "isRewardsDelegate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "merkleWindows",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "ipfsHash",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextCreatedIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeRewardsDelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lock",
          "type": "uint256"
        }
      ],
      "name": "setLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        }
      ],
      "name": "setRewardsDelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_whitelist",
          "type": "bool"
        }
      ],
      "name": "setWhitelisted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_ipfsHash",
          "type": "string"
        }
      ],
      "name": "setWindow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "windowIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "accountIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "internalType": "struct IMerkleDistributorCore.Claim",
          "name": "_claim",
          "type": "tuple"
        }
      ],
      "name": "verifyClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedDelegates",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e3565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e1576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61256780620000f36000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063891b0d71116100f9578063d3e1574711610097578063e0a5965811610071578063e0a59658146103e1578063e2e441a3146103f4578063f2fde38b146103fd578063f364c90c1461041057600080fd5b8063d3e15747146103a8578063d4511868146103bb578063d6ef7af0146103ce57600080fd5b80639dd6af1b116100d35780639dd6af1b146103465780639f5a967214610359578063a89a6ce81461036c578063bffe34861461037f57600080fd5b8063891b0d71146102eb5780638da5cb5b1461030e5780639281aa0b1461033357600080fd5b80635c975abb1161016657806373d6125e1161014057806373d6125e1461028a5780638129fc1c146102ad5780638456cb59146102b557806388a586e1146102bd57600080fd5b80635c975abb146102645780636c0aa8d21461026f578063715018a61461028257600080fd5b80633f4ba83a116101a25780633f4ba83a1461020f5780634114d2ee146102175780634a63b3d31461022a5780634ade6d5d1461024157600080fd5b806311db149f146101c957806323928cdb146101de5780632ee70dc3146101e6575b600080fd5b6101dc6101d7366004611e86565b610423565b005b6101dc610586565b6101f96101f4366004611ebb565b6105df565b6040516102069190611f24565b60405180910390f35b6101dc6106dc565b6101dc610225366004611f65565b6106ee565b61023360ce5481565b604051908152602001610206565b61025461024f366004612016565b61096c565b6040519015158152602001610206565b60655460ff16610254565b6101dc61027d366004611f65565b610993565b6101dc610cfa565b610254610298366004612049565b60ca6020526000908152604090205460ff1681565b6101dc610d0c565b6101dc610e1c565b6102546102cb366004612049565b6001600160a01b03908116600090815260c9602052604090205416151590565b6102fe6102f9366004611ebb565b610e2c565b6040516102069493929190612064565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610206565b6101dc6103413660046120a9565b610ee9565b610254610354366004611e86565b610f50565b6101dc610367366004611ebb565b61100a565b6101dc61037a366004611e86565b61108c565b61031b61038d366004612049565b60c9602052600090815260409020546001600160a01b031681565b6101dc6103b6366004611ebb565b61115c565b6101dc6103c93660046120e0565b611197565b6101dc6103dc366004612199565b6112a1565b6101dc6103ef366004612049565b611301565b61023360cd5481565b6101dc61040b366004612049565b611390565b61025461041e3660046121c3565b611406565b61042b611451565b60ce54158061043b57504360ce54105b6104605760405162461bcd60e51b8152600401610457906121e5565b60405180910390fd5b610468611497565b33600090815260ca602052604090205460ff166104975760405162461bcd60e51b815260040161045790612214565b60a08101516104a6813361096c565b6104ea5760405162461bcd60e51b815260206004820152601560248201527410bbb434ba32b634b9ba32b2103337b9103ab9b2b960591b6044820152606401610457565b6104f482336114f0565b8160a001516001600160a01b0316826000015161050e3390565b6001600160a01b03167f3640ae807a520ec0bc4697693f4aa46578908b1271fe53e6aba6c958deca46dd8560200151866040015187606001516040516105709392919092835260208301919091526001600160a01b0316604082015260600190565b60405180910390a4506105836001609755565b50565b33600081815260c9602052604080822080546001600160a01b0319811690915590516001600160a01b0390911692839290917fe8514dd4be968431135580c26314ec35afafc8178268603f99625584960d9c169190a350565b604080516080808201835260008083526020808401829052838501829052606080850181905286835260cb825291859020855193840186528054845260018101549184019190915260028101546001600160a01b03169483019490945260038401805493949293918401916106539061223a565b80601f016020809104026020016040519081016040528092919081815260200182805461067f9061223a565b80156106cc5780601f106106a1576101008083540402835291602001916106cc565b820191906000526020600020905b8154815290600101906020018083116106af57829003601f168201915b5050505050815250509050919050565b6106e461156a565b6106ec6115c4565b565b60ce5415806106fe57504360ce54105b61071a5760405162461bcd60e51b8152600401610457906121e5565b610722611497565b600081511161075f5760405162461bcd60e51b81526020600482015260096024820152684e6f20436c61696d7360b81b6044820152606401610457565b6000808260008151811061077557610775612274565b602002602001015160600151905060005b835181101561090e5760008482815181106107a3576107a3612274565b602002602001015190506107b43390565b6001600160a01b03168160a001516001600160a01b03161461080d5760405162461bcd60e51b815260206004820152601260248201527121b630b4b6b0b73a10109e9029b2b73232b960711b6044820152606401610457565b826001600160a01b031681606001516001600160a01b0316146108645760405162461bcd60e51b815260206004820152600f60248201526e4d756c7469706c6520546f6b656e7360881b6044820152606401610457565b61086d81611616565b604081015161087c90856122a0565b60a082015182519195506001600160a01b031690336001600160a01b03167f18bdb6adb84039f917775d1fb8e7b7e7737ad5915d12eef0e4654b85e18d07b48460200151856040015186606001516040516108f39392919092835260208301919091526001600160a01b0316604082015260600190565b60405180910390a45080610906816122b3565b915050610786565b506000821161094c5760405162461bcd60e51b815260206004820152600a6024820152694e6f205265776172647360b01b6044820152606401610457565b6109606001600160a01b03821633846116cc565b50506105836001609755565b6001600160a01b03828116600090815260c960205260409020548116908216145b92915050565b61099b611451565b60ce5415806109ab57504360ce54105b6109c75760405162461bcd60e51b8152600401610457906121e5565b6109cf611497565b33600090815260ca602052604090205460ff166109fe5760405162461bcd60e51b815260040161045790612214565b805180610a395760405162461bcd60e51b81526020600482015260096024820152684e6f20436c61696d7360b81b6044820152606401610457565b60008083600081518110610a4f57610a4f612274565b602002602001015160600151905060008367ffffffffffffffff811115610a7857610a78611cf5565b604051908082528060200260200182016040528015610aa1578160200160208202803683370190505b50905060008467ffffffffffffffff811115610abf57610abf611cf5565b604051908082528060200260200182016040528015610ae8578160200160208202803683370190505b50905060005b85811015610c4c576000878281518110610b0a57610b0a612274565b60200260200101519050846001600160a01b031681606001516001600160a01b031614610b6b5760405162461bcd60e51b815260206004820152600f60248201526e4d756c7469706c6520546f6b656e7360881b6044820152606401610457565b610b7a8160a0015161024f3390565b610bbe5760405162461bcd60e51b815260206004820152601560248201527410bbb434ba32b634b9ba32b2103337b9103ab9b2b960591b6044820152606401610457565b610bc781611616565b6040810151610bd690876122a0565b9550610be58160000151611734565b848381518110610bf757610bf7612274565b60ff909216602092830291909101820152810151610c1490611799565b838381518110610c2657610c26612274565b61ffff909216602092830291909101909101525080610c44816122b3565b915050610aee565b5060008411610c8a5760405162461bcd60e51b815260206004820152600a6024820152694e6f205265776172647360b01b6044820152606401610457565b610c9e6001600160a01b03841633866116cc565b6001600160a01b038316336001600160a01b03167f71c65b912fe08d1b1795243b1bea9165b7cec11f16b2065f32528386a17e53fd8484604051610ce39291906122cc565b60405180910390a350505050506105836001609755565b610d0261156a565b6106ec60006117fc565b600054610100900460ff1615808015610d2c5750600054600160ff909116105b80610d465750303b158015610d46575060005460ff166001145b610da95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610457565b6000805460ff191660011790558015610dcc576000805461ff0019166101001790555b610dd461184e565b8015610583576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b610e2461156a565b6106ec61187d565b60cb602052600090815260409020805460018201546002830154600384018054939492936001600160a01b039092169291610e669061223a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e929061223a565b8015610edf5780601f10610eb457610100808354040283529160200191610edf565b820191906000526020600020905b815481529060010190602001808311610ec257829003601f168201915b5050505050905084565b610ef161156a565b6001600160a01b038216600081815260ca6020908152604091829020805460ff191685151590811790915591519182527fad9c06a74eba234a92f7204a4c63a48c1ebc0b6a1bd2dc12d341c04b6fe19923910160405180910390a25050565b6000808260a001518360200151846000015185604001518660600151604051602001610fab9594939291906001600160a01b039586168152602081019490945260408401929092526060830152909116608082015260a00190565b60408051601f198184030181528282528051602091820120908301520160408051601f19818403018152918152815160209283012060808601518651600090815260cb909452919092205491925061100391836118ba565b9392505050565b61101261156a565b600081815260cb60205260408120818155600181018290556002810180546001600160a01b03191690559061104a6003830182611cab565b50506110533390565b6001600160a01b0316817f8fea52000ecb40f2262c672496dfadccc9d6290439bac487e084de8c57682d6660405160405180910390a350565b60ce54158061109c57504360ce54105b6110b85760405162461bcd60e51b8152600401610457906121e5565b6110c0611497565b6110ce818260a001516114f0565b8060a001516001600160a01b031681600001516110e83390565b6001600160a01b03167f18bdb6adb84039f917775d1fb8e7b7e7737ad5915d12eef0e4654b85e18d07b484602001518560400151866060015160405161114a9392919092835260208301919091526001600160a01b0316604082015260600190565b60405180910390a46105836001609755565b61116461156a565b60ce81905560405181907fc96ac8f962bbb0ee952304839108c72982a49173fa73e62ede62c943e10f574290600090a250565b61119f61156a565b60cd80549060019060006111b383856122a0565b90915550506040805160808101825284815260208082018881526001600160a01b0388811684860190815260608501888152600088815260cb90955295909320845181559151600183015591516002820180546001600160a01b03191691909316179091559151909190600382019061122c908261239c565b5090505061124c61123a3390565b6001600160a01b0386169030886118d0565b6001600160a01b038416336001600160a01b0316827f6785e968a284c8685ff9cf6eaa341524d5b9764def1cb1bc6e0dc1d62c4aeb4b8860405161129291815260200190565b60405180910390a45050505050565b6112a961156a565b6112bd6001600160a01b03831633836116cc565b6040518181526001600160a01b0383169033907ffb0872526787ac1be379aa37eaa9913b47d6d50c3f5fe5ec67ffe4282493670e9060200160405180910390a35050565b6001600160a01b038116600090815260ca602052604090205460ff166113395760405162461bcd60e51b815260040161045790612214565b33600081815260c9602052604080822080546001600160a01b0319166001600160a01b03861690811790915590519092917f12dade473695d73bd34e031c850d5e815fa17a42b1b5ba13ff72de2497c5e30991a350565b61139861156a565b6001600160a01b0381166113fd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610457565b610583816117fc565b60008061141561010084612472565b9050600061142561010085612486565b600095865260cc602090815260408088209488529390529190942054600190911b908116149392505050565b60655460ff16156106ec5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610457565b6002609754036114e95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610457565b6002609755565b6114f982611616565b60008260400151116115405760405162461bcd60e51b815260206004820152601060248201526f4e6f7468696e6720746f20436c61696d60801b6044820152606401610457565b61156681836040015184606001516001600160a01b03166116cc9092919063ffffffff16565b5050565b6033546001600160a01b031633146106ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610457565b6115cc61190e565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61161f81610f50565b61165b5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420436c61696d60981b6044820152606401610457565b61166d81600001518260200151611406565b156116ba5760405162461bcd60e51b815260206004820152601a60248201527f416c726561647920436c61696d656420666f722057696e646f770000000000006044820152606401610457565b61058381600001518260200151611957565b6040516001600160a01b03831660248201526044810182905261172f90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526119a0565b505050565b600060ff8211156117955760405162461bcd60e51b815260206004820152602560248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2038604482015264206269747360d81b6064820152608401610457565b5090565b600061ffff8211156117955760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201526536206269747360d01b6064820152608401610457565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166118755760405162461bcd60e51b81526004016104579061249a565b6106ec611a72565b611885611451565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115f93390565b6000826118c78584611aa2565b14949350505050565b6040516001600160a01b03808516602483015283166044820152606481018290526119089085906323b872dd60e01b906084016116f8565b50505050565b60655460ff166106ec5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610457565b600061196561010083612472565b9050600061197561010084612486565b600094855260cc60209081526040808720948752939052919093208054600190921b90911790555050565b60006119f5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611aef9092919063ffffffff16565b80519091501561172f5780806020019051810190611a1391906124e5565b61172f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610457565b600054610100900460ff16611a995760405162461bcd60e51b81526004016104579061249a565b6106ec336117fc565b600081815b8451811015611ae757611ad382868381518110611ac657611ac6612274565b6020026020010151611b06565b915080611adf816122b3565b915050611aa7565b509392505050565b6060611afe8484600085611b32565b949350505050565b6000818310611b22576000828152602084905260409020611003565b5060009182526020526040902090565b606082471015611b935760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610457565b600080866001600160a01b03168587604051611baf9190612502565b60006040518083038185875af1925050503d8060008114611bec576040519150601f19603f3d011682016040523d82523d6000602084013e611bf1565b606091505b5091509150611c0287838387611c0d565b979650505050505050565b60608315611c7c578251600003611c75576001600160a01b0385163b611c755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610457565b5081611afe565b611afe8383815115611c915781518083602001fd5b8060405162461bcd60e51b8152600401610457919061251e565b508054611cb79061223a565b6000825580601f10611cc7575050565b601f01602090049060005260206000209081019061058391905b808211156117955760008155600101611ce1565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611d2e57611d2e611cf5565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611d5d57611d5d611cf5565b604052919050565b80356001600160a01b0381168114611d7c57600080fd5b919050565b600067ffffffffffffffff821115611d9b57611d9b611cf5565b5060051b60200190565b600060c08284031215611db757600080fd5b611dbf611d0b565b9050813581526020808301358183015260408301356040830152611de560608401611d65565b6060830152608083013567ffffffffffffffff811115611e0457600080fd5b8301601f81018513611e1557600080fd5b8035611e28611e2382611d81565b611d34565b81815260059190911b82018301908381019087831115611e4757600080fd5b928401925b82841015611e6557833582529284019290840190611e4c565b608086015250611e7b9250505060a08301611d65565b60a082015292915050565b600060208284031215611e9857600080fd5b813567ffffffffffffffff811115611eaf57600080fd5b611afe84828501611da5565b600060208284031215611ecd57600080fd5b5035919050565b60005b83811015611eef578181015183820152602001611ed7565b50506000910152565b60008151808452611f10816020860160208601611ed4565b601f01601f19169290920160200192915050565b60208152815160208201526020820151604082015260018060a01b03604083015116606082015260006060830151608080840152611afe60a0840182611ef8565b60006020808385031215611f7857600080fd5b823567ffffffffffffffff80821115611f9057600080fd5b818501915085601f830112611fa457600080fd5b8135611fb2611e2382611d81565b81815260059190911b83018401908481019088831115611fd157600080fd5b8585015b8381101561200957803585811115611fed5760008081fd5b611ffb8b89838a0101611da5565b845250918601918601611fd5565b5098975050505050505050565b6000806040838503121561202957600080fd5b61203283611d65565b915061204060208401611d65565b90509250929050565b60006020828403121561205b57600080fd5b61100382611d65565b84815283602082015260018060a01b03831660408201526080606082015260006120916080830184611ef8565b9695505050505050565b801515811461058357600080fd5b600080604083850312156120bc57600080fd5b6120c583611d65565b915060208301356120d58161209b565b809150509250929050565b600080600080608085870312156120f657600080fd5b843593506020612107818701611d65565b935060408601359250606086013567ffffffffffffffff8082111561212b57600080fd5b818801915088601f83011261213f57600080fd5b81358181111561215157612151611cf5565b612163601f8201601f19168501611d34565b9150808252898482850101111561217957600080fd5b808484018584013760008482840101525080935050505092959194509250565b600080604083850312156121ac57600080fd5b6121b583611d65565b946020939093013593505050565b600080604083850312156121d657600080fd5b50508035926020909101359150565b602080825260159082015274111a5cdd1c9a589d5d1bdc881a5cc8131bd8dad959605a1b604082015260600190565b6020808252600c908201526b085dda1a5d195b1a5cdd195960a21b604082015260600190565b600181811c9082168061224e57607f821691505b60208210810361226e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561098d5761098d61228a565b6000600182016122c5576122c561228a565b5060010190565b604080825283519082018190526000906020906060840190828701845b8281101561230857815160ff16845292840192908401906001016122e9565b5050508381038285015284518082528583019183019060005b8181101561234157835161ffff1683529284019291840191600101612321565b5090979650505050505050565b601f82111561172f57600081815260208120601f850160051c810160208610156123755750805b601f850160051c820191505b8181101561239457828155600101612381565b505050505050565b815167ffffffffffffffff8111156123b6576123b6611cf5565b6123ca816123c4845461223a565b8461234e565b602080601f8311600181146123ff57600084156123e75750858301515b600019600386901b1c1916600185901b178555612394565b600085815260208120601f198616915b8281101561242e5788860151825594840194600190910190840161240f565b508582101561244c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601260045260246000fd5b6000826124815761248161245c565b500490565b6000826124955761249561245c565b500690565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156124f757600080fd5b81516110038161209b565b60008251612514818460208701611ed4565b9190910192915050565b6020815260006110036020830184611ef856fea2646970667358221220677b13fd9d52f56a47263f051db80f2f4d8f9e4db6ae210751e92d212dd471ce64736f6c63430008100033",
    "sourceMap": "4269:11832:137:-:0;;;5269:53;;;;;;;;;-1:-1:-1;5293:22:137;:20;:22::i;:::-;4269:11832;;5939:280:23;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:23;;216:2:206;5998:66:23;;;198:21:206;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:206;;;338:37;392:19;;5998:66:23;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:23;6140:15;6125:30;;;;;;6174:28;;564:36:206;;;6174:28:23;;552:2:206;537:18;6174:28:23;;;;;;;6074:139;5939:280::o;422:184:206:-;4269:11832:137;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063891b0d71116100f9578063d3e1574711610097578063e0a5965811610071578063e0a59658146103e1578063e2e441a3146103f4578063f2fde38b146103fd578063f364c90c1461041057600080fd5b8063d3e15747146103a8578063d4511868146103bb578063d6ef7af0146103ce57600080fd5b80639dd6af1b116100d35780639dd6af1b146103465780639f5a967214610359578063a89a6ce81461036c578063bffe34861461037f57600080fd5b8063891b0d71146102eb5780638da5cb5b1461030e5780639281aa0b1461033357600080fd5b80635c975abb1161016657806373d6125e1161014057806373d6125e1461028a5780638129fc1c146102ad5780638456cb59146102b557806388a586e1146102bd57600080fd5b80635c975abb146102645780636c0aa8d21461026f578063715018a61461028257600080fd5b80633f4ba83a116101a25780633f4ba83a1461020f5780634114d2ee146102175780634a63b3d31461022a5780634ade6d5d1461024157600080fd5b806311db149f146101c957806323928cdb146101de5780632ee70dc3146101e6575b600080fd5b6101dc6101d7366004611e86565b610423565b005b6101dc610586565b6101f96101f4366004611ebb565b6105df565b6040516102069190611f24565b60405180910390f35b6101dc6106dc565b6101dc610225366004611f65565b6106ee565b61023360ce5481565b604051908152602001610206565b61025461024f366004612016565b61096c565b6040519015158152602001610206565b60655460ff16610254565b6101dc61027d366004611f65565b610993565b6101dc610cfa565b610254610298366004612049565b60ca6020526000908152604090205460ff1681565b6101dc610d0c565b6101dc610e1c565b6102546102cb366004612049565b6001600160a01b03908116600090815260c9602052604090205416151590565b6102fe6102f9366004611ebb565b610e2c565b6040516102069493929190612064565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610206565b6101dc6103413660046120a9565b610ee9565b610254610354366004611e86565b610f50565b6101dc610367366004611ebb565b61100a565b6101dc61037a366004611e86565b61108c565b61031b61038d366004612049565b60c9602052600090815260409020546001600160a01b031681565b6101dc6103b6366004611ebb565b61115c565b6101dc6103c93660046120e0565b611197565b6101dc6103dc366004612199565b6112a1565b6101dc6103ef366004612049565b611301565b61023360cd5481565b6101dc61040b366004612049565b611390565b61025461041e3660046121c3565b611406565b61042b611451565b60ce54158061043b57504360ce54105b6104605760405162461bcd60e51b8152600401610457906121e5565b60405180910390fd5b610468611497565b33600090815260ca602052604090205460ff166104975760405162461bcd60e51b815260040161045790612214565b60a08101516104a6813361096c565b6104ea5760405162461bcd60e51b815260206004820152601560248201527410bbb434ba32b634b9ba32b2103337b9103ab9b2b960591b6044820152606401610457565b6104f482336114f0565b8160a001516001600160a01b0316826000015161050e3390565b6001600160a01b03167f3640ae807a520ec0bc4697693f4aa46578908b1271fe53e6aba6c958deca46dd8560200151866040015187606001516040516105709392919092835260208301919091526001600160a01b0316604082015260600190565b60405180910390a4506105836001609755565b50565b33600081815260c9602052604080822080546001600160a01b0319811690915590516001600160a01b0390911692839290917fe8514dd4be968431135580c26314ec35afafc8178268603f99625584960d9c169190a350565b604080516080808201835260008083526020808401829052838501829052606080850181905286835260cb825291859020855193840186528054845260018101549184019190915260028101546001600160a01b03169483019490945260038401805493949293918401916106539061223a565b80601f016020809104026020016040519081016040528092919081815260200182805461067f9061223a565b80156106cc5780601f106106a1576101008083540402835291602001916106cc565b820191906000526020600020905b8154815290600101906020018083116106af57829003601f168201915b5050505050815250509050919050565b6106e461156a565b6106ec6115c4565b565b60ce5415806106fe57504360ce54105b61071a5760405162461bcd60e51b8152600401610457906121e5565b610722611497565b600081511161075f5760405162461bcd60e51b81526020600482015260096024820152684e6f20436c61696d7360b81b6044820152606401610457565b6000808260008151811061077557610775612274565b602002602001015160600151905060005b835181101561090e5760008482815181106107a3576107a3612274565b602002602001015190506107b43390565b6001600160a01b03168160a001516001600160a01b03161461080d5760405162461bcd60e51b815260206004820152601260248201527121b630b4b6b0b73a10109e9029b2b73232b960711b6044820152606401610457565b826001600160a01b031681606001516001600160a01b0316146108645760405162461bcd60e51b815260206004820152600f60248201526e4d756c7469706c6520546f6b656e7360881b6044820152606401610457565b61086d81611616565b604081015161087c90856122a0565b60a082015182519195506001600160a01b031690336001600160a01b03167f18bdb6adb84039f917775d1fb8e7b7e7737ad5915d12eef0e4654b85e18d07b48460200151856040015186606001516040516108f39392919092835260208301919091526001600160a01b0316604082015260600190565b60405180910390a45080610906816122b3565b915050610786565b506000821161094c5760405162461bcd60e51b815260206004820152600a6024820152694e6f205265776172647360b01b6044820152606401610457565b6109606001600160a01b03821633846116cc565b50506105836001609755565b6001600160a01b03828116600090815260c960205260409020548116908216145b92915050565b61099b611451565b60ce5415806109ab57504360ce54105b6109c75760405162461bcd60e51b8152600401610457906121e5565b6109cf611497565b33600090815260ca602052604090205460ff166109fe5760405162461bcd60e51b815260040161045790612214565b805180610a395760405162461bcd60e51b81526020600482015260096024820152684e6f20436c61696d7360b81b6044820152606401610457565b60008083600081518110610a4f57610a4f612274565b602002602001015160600151905060008367ffffffffffffffff811115610a7857610a78611cf5565b604051908082528060200260200182016040528015610aa1578160200160208202803683370190505b50905060008467ffffffffffffffff811115610abf57610abf611cf5565b604051908082528060200260200182016040528015610ae8578160200160208202803683370190505b50905060005b85811015610c4c576000878281518110610b0a57610b0a612274565b60200260200101519050846001600160a01b031681606001516001600160a01b031614610b6b5760405162461bcd60e51b815260206004820152600f60248201526e4d756c7469706c6520546f6b656e7360881b6044820152606401610457565b610b7a8160a0015161024f3390565b610bbe5760405162461bcd60e51b815260206004820152601560248201527410bbb434ba32b634b9ba32b2103337b9103ab9b2b960591b6044820152606401610457565b610bc781611616565b6040810151610bd690876122a0565b9550610be58160000151611734565b848381518110610bf757610bf7612274565b60ff909216602092830291909101820152810151610c1490611799565b838381518110610c2657610c26612274565b61ffff909216602092830291909101909101525080610c44816122b3565b915050610aee565b5060008411610c8a5760405162461bcd60e51b815260206004820152600a6024820152694e6f205265776172647360b01b6044820152606401610457565b610c9e6001600160a01b03841633866116cc565b6001600160a01b038316336001600160a01b03167f71c65b912fe08d1b1795243b1bea9165b7cec11f16b2065f32528386a17e53fd8484604051610ce39291906122cc565b60405180910390a350505050506105836001609755565b610d0261156a565b6106ec60006117fc565b600054610100900460ff1615808015610d2c5750600054600160ff909116105b80610d465750303b158015610d46575060005460ff166001145b610da95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610457565b6000805460ff191660011790558015610dcc576000805461ff0019166101001790555b610dd461184e565b8015610583576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b610e2461156a565b6106ec61187d565b60cb602052600090815260409020805460018201546002830154600384018054939492936001600160a01b039092169291610e669061223a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e929061223a565b8015610edf5780601f10610eb457610100808354040283529160200191610edf565b820191906000526020600020905b815481529060010190602001808311610ec257829003601f168201915b5050505050905084565b610ef161156a565b6001600160a01b038216600081815260ca6020908152604091829020805460ff191685151590811790915591519182527fad9c06a74eba234a92f7204a4c63a48c1ebc0b6a1bd2dc12d341c04b6fe19923910160405180910390a25050565b6000808260a001518360200151846000015185604001518660600151604051602001610fab9594939291906001600160a01b039586168152602081019490945260408401929092526060830152909116608082015260a00190565b60408051601f198184030181528282528051602091820120908301520160408051601f19818403018152918152815160209283012060808601518651600090815260cb909452919092205491925061100391836118ba565b9392505050565b61101261156a565b600081815260cb60205260408120818155600181018290556002810180546001600160a01b03191690559061104a6003830182611cab565b50506110533390565b6001600160a01b0316817f8fea52000ecb40f2262c672496dfadccc9d6290439bac487e084de8c57682d6660405160405180910390a350565b60ce54158061109c57504360ce54105b6110b85760405162461bcd60e51b8152600401610457906121e5565b6110c0611497565b6110ce818260a001516114f0565b8060a001516001600160a01b031681600001516110e83390565b6001600160a01b03167f18bdb6adb84039f917775d1fb8e7b7e7737ad5915d12eef0e4654b85e18d07b484602001518560400151866060015160405161114a9392919092835260208301919091526001600160a01b0316604082015260600190565b60405180910390a46105836001609755565b61116461156a565b60ce81905560405181907fc96ac8f962bbb0ee952304839108c72982a49173fa73e62ede62c943e10f574290600090a250565b61119f61156a565b60cd80549060019060006111b383856122a0565b90915550506040805160808101825284815260208082018881526001600160a01b0388811684860190815260608501888152600088815260cb90955295909320845181559151600183015591516002820180546001600160a01b03191691909316179091559151909190600382019061122c908261239c565b5090505061124c61123a3390565b6001600160a01b0386169030886118d0565b6001600160a01b038416336001600160a01b0316827f6785e968a284c8685ff9cf6eaa341524d5b9764def1cb1bc6e0dc1d62c4aeb4b8860405161129291815260200190565b60405180910390a45050505050565b6112a961156a565b6112bd6001600160a01b03831633836116cc565b6040518181526001600160a01b0383169033907ffb0872526787ac1be379aa37eaa9913b47d6d50c3f5fe5ec67ffe4282493670e9060200160405180910390a35050565b6001600160a01b038116600090815260ca602052604090205460ff166113395760405162461bcd60e51b815260040161045790612214565b33600081815260c9602052604080822080546001600160a01b0319166001600160a01b03861690811790915590519092917f12dade473695d73bd34e031c850d5e815fa17a42b1b5ba13ff72de2497c5e30991a350565b61139861156a565b6001600160a01b0381166113fd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610457565b610583816117fc565b60008061141561010084612472565b9050600061142561010085612486565b600095865260cc602090815260408088209488529390529190942054600190911b908116149392505050565b60655460ff16156106ec5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610457565b6002609754036114e95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610457565b6002609755565b6114f982611616565b60008260400151116115405760405162461bcd60e51b815260206004820152601060248201526f4e6f7468696e6720746f20436c61696d60801b6044820152606401610457565b61156681836040015184606001516001600160a01b03166116cc9092919063ffffffff16565b5050565b6033546001600160a01b031633146106ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610457565b6115cc61190e565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61161f81610f50565b61165b5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420436c61696d60981b6044820152606401610457565b61166d81600001518260200151611406565b156116ba5760405162461bcd60e51b815260206004820152601a60248201527f416c726561647920436c61696d656420666f722057696e646f770000000000006044820152606401610457565b61058381600001518260200151611957565b6040516001600160a01b03831660248201526044810182905261172f90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526119a0565b505050565b600060ff8211156117955760405162461bcd60e51b815260206004820152602560248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2038604482015264206269747360d81b6064820152608401610457565b5090565b600061ffff8211156117955760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201526536206269747360d01b6064820152608401610457565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166118755760405162461bcd60e51b81526004016104579061249a565b6106ec611a72565b611885611451565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115f93390565b6000826118c78584611aa2565b14949350505050565b6040516001600160a01b03808516602483015283166044820152606481018290526119089085906323b872dd60e01b906084016116f8565b50505050565b60655460ff166106ec5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610457565b600061196561010083612472565b9050600061197561010084612486565b600094855260cc60209081526040808720948752939052919093208054600190921b90911790555050565b60006119f5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611aef9092919063ffffffff16565b80519091501561172f5780806020019051810190611a1391906124e5565b61172f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610457565b600054610100900460ff16611a995760405162461bcd60e51b81526004016104579061249a565b6106ec336117fc565b600081815b8451811015611ae757611ad382868381518110611ac657611ac6612274565b6020026020010151611b06565b915080611adf816122b3565b915050611aa7565b509392505050565b6060611afe8484600085611b32565b949350505050565b6000818310611b22576000828152602084905260409020611003565b5060009182526020526040902090565b606082471015611b935760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610457565b600080866001600160a01b03168587604051611baf9190612502565b60006040518083038185875af1925050503d8060008114611bec576040519150601f19603f3d011682016040523d82523d6000602084013e611bf1565b606091505b5091509150611c0287838387611c0d565b979650505050505050565b60608315611c7c578251600003611c75576001600160a01b0385163b611c755760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610457565b5081611afe565b611afe8383815115611c915781518083602001fd5b8060405162461bcd60e51b8152600401610457919061251e565b508054611cb79061223a565b6000825580601f10611cc7575050565b601f01602090049060005260206000209081019061058391905b808211156117955760008155600101611ce1565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611d2e57611d2e611cf5565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611d5d57611d5d611cf5565b604052919050565b80356001600160a01b0381168114611d7c57600080fd5b919050565b600067ffffffffffffffff821115611d9b57611d9b611cf5565b5060051b60200190565b600060c08284031215611db757600080fd5b611dbf611d0b565b9050813581526020808301358183015260408301356040830152611de560608401611d65565b6060830152608083013567ffffffffffffffff811115611e0457600080fd5b8301601f81018513611e1557600080fd5b8035611e28611e2382611d81565b611d34565b81815260059190911b82018301908381019087831115611e4757600080fd5b928401925b82841015611e6557833582529284019290840190611e4c565b608086015250611e7b9250505060a08301611d65565b60a082015292915050565b600060208284031215611e9857600080fd5b813567ffffffffffffffff811115611eaf57600080fd5b611afe84828501611da5565b600060208284031215611ecd57600080fd5b5035919050565b60005b83811015611eef578181015183820152602001611ed7565b50506000910152565b60008151808452611f10816020860160208601611ed4565b601f01601f19169290920160200192915050565b60208152815160208201526020820151604082015260018060a01b03604083015116606082015260006060830151608080840152611afe60a0840182611ef8565b60006020808385031215611f7857600080fd5b823567ffffffffffffffff80821115611f9057600080fd5b818501915085601f830112611fa457600080fd5b8135611fb2611e2382611d81565b81815260059190911b83018401908481019088831115611fd157600080fd5b8585015b8381101561200957803585811115611fed5760008081fd5b611ffb8b89838a0101611da5565b845250918601918601611fd5565b5098975050505050505050565b6000806040838503121561202957600080fd5b61203283611d65565b915061204060208401611d65565b90509250929050565b60006020828403121561205b57600080fd5b61100382611d65565b84815283602082015260018060a01b03831660408201526080606082015260006120916080830184611ef8565b9695505050505050565b801515811461058357600080fd5b600080604083850312156120bc57600080fd5b6120c583611d65565b915060208301356120d58161209b565b809150509250929050565b600080600080608085870312156120f657600080fd5b843593506020612107818701611d65565b935060408601359250606086013567ffffffffffffffff8082111561212b57600080fd5b818801915088601f83011261213f57600080fd5b81358181111561215157612151611cf5565b612163601f8201601f19168501611d34565b9150808252898482850101111561217957600080fd5b808484018584013760008482840101525080935050505092959194509250565b600080604083850312156121ac57600080fd5b6121b583611d65565b946020939093013593505050565b600080604083850312156121d657600080fd5b50508035926020909101359150565b602080825260159082015274111a5cdd1c9a589d5d1bdc881a5cc8131bd8dad959605a1b604082015260600190565b6020808252600c908201526b085dda1a5d195b1a5cdd195960a21b604082015260600190565b600181811c9082168061224e57607f821691505b60208210810361226e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561098d5761098d61228a565b6000600182016122c5576122c561228a565b5060010190565b604080825283519082018190526000906020906060840190828701845b8281101561230857815160ff16845292840192908401906001016122e9565b5050508381038285015284518082528583019183019060005b8181101561234157835161ffff1683529284019291840191600101612321565b5090979650505050505050565b601f82111561172f57600081815260208120601f850160051c810160208610156123755750805b601f850160051c820191505b8181101561239457828155600101612381565b505050505050565b815167ffffffffffffffff8111156123b6576123b6611cf5565b6123ca816123c4845461223a565b8461234e565b602080601f8311600181146123ff57600084156123e75750858301515b600019600386901b1c1916600185901b178555612394565b600085815260208120601f198616915b8281101561242e5788860151825594840194600190910190840161240f565b508582101561244c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601260045260246000fd5b6000826124815761248161245c565b500490565b6000826124955761249561245c565b500690565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156124f757600080fd5b81516110038161209b565b60008251612514818460208701611ed4565b9190910192915050565b6020815260006110036020830184611ef856fea2646970667358221220677b13fd9d52f56a47263f051db80f2f4d8f9e4db6ae210751e92d212dd471ce64736f6c63430008100033",
    "sourceMap": "4269:11832:137:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12062:401;;;;;;:::i;:::-;;:::i;:::-;;2063:205:136;;;:::i;15969:130:137:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5637:65;;;:::i;9076:1025::-;;;;;;:::i;:::-;;:::i;4967:24::-;;;;;;;;;5206:25:206;;;5194:2;5179:18;4967:24:137;5060:177:206;2553:143:136;;;;;;:::i;:::-;;:::i;:::-;;;5672:14:206;;5665:22;5647:41;;5635:2;5620:18;2553:143:136;5507:187:206;1858:84:24;1928:7;;;;1858:84;;10544:1512:137;;;;;;:::i;:::-;;:::i;2071:101:22:-;;;:::i;927:52:136:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5388:74:137;;;:::i;5570:61::-;;;:::i;2326:129:136:-;;;;;;:::i;:::-;-1:-1:-1;;;;;2416:18:136;;;2393:4;2416:18;;;:11;:18;;;;;;;:32;;;2326:129;4500:47:137;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;1441:85:22:-;1513:6;;-1:-1:-1;;;;;1513:6:22;1441:85;;;-1:-1:-1;;;;;6520:32:206;;;6502:51;;6490:2;6475:18;1441:85:22;6356:203:206;1500:202:136;;;;;;:::i;:::-;;:::i;15339:557:137:-;;;;;;:::i;:::-;;:::i;7568:169::-;;;;;;:::i;:::-;;:::i;8486:244::-;;;;;;:::i;:::-;;:::i;807:46:136:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;807:46:136;;;7212:114:137;;;;;;:::i;:::-;;:::i;6329:701::-;;;;;;:::i;:::-;;:::i;8025:223::-;;;;;;:::i;:::-;;:::i;1776:229:136:-;;;;;;:::i;:::-;;:::i;4870:31:137:-;;;;;;2321:198:22;;;;;;:::i;:::-;;:::i;14373:532:137:-;;;;;;:::i;:::-;;:::i;12062:401::-;1482:19:24;:17;:19::i;:::-;5069:9:137::1;::::0;:14;;:42:::1;;;5099:12;5087:9;;:24;5069:42;5061:76;;;;-1:-1:-1::0;;;5061:76:137::1;;;;;;;:::i;:::-;;;;;;;;;2505:21:25::2;:19;:21::i;:::-;929:10:35::0;1337:34:136::3;::::0;;;:20:::3;:34;::::0;;;;;::::3;;1329:59;;;;-1:-1:-1::0;;;1329:59:136::3;;;;;;;:::i;:::-;12236:14:137::4;::::0;::::4;::::0;1137:41:136::4;12236:14:137::0;929:10:35;2553:143:136;:::i;1137:41::-:4;1129:75;;;::::0;-1:-1:-1;;;1129:75:136;;9392:2:206;1129:75:136::4;::::0;::::4;9374:21:206::0;9431:2;9411:18;;;9404:30;-1:-1:-1;;;9450:18:206;;;9443:51;9511:18;;1129:75:136::4;9190:345:206::0;1129:75:136::4;12266:35:137::5;12280:6:::0;929:10:35;12266:13:137::5;:35::i;:::-;12378:6;:14;;;-1:-1:-1::0;;;;;12316:140:137::5;12358:6;:18;;;12344:12;929:10:35::0;;850:96;12344:12:137::5;-1:-1:-1::0;;;;;12316:140:137::5;;12394:6;:19;;;12415:6;:13;;;12430:6;:12;;;12316:140;;;;;;;9742:25:206::0;;;9798:2;9783:18;;9776:34;;;;-1:-1:-1;;;;;9846:32:206;9841:2;9826:18;;9819:60;9730:2;9715:18;;9540:345;12316:140:137::5;;;;;;;;1398:1:136::4;2547:20:25::2;1787:1:::0;3053:7;:22;2873:209;2547:20:::2;12062:401:137::0;:::o;2063:205:136:-;929:10:35;2115:16:136;2134:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;;2169:38:136;;;;;2222:39;;-1:-1:-1;;;;;2134:25:136;;;;;;929:10:35;;2222:39:136;;2115:16;2222:39;2105:163;2063:205::o;15969:130:137:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16065:27:137;;;:13;:27;;;;;;16058:34;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16058:34:137;;;;;;;;;;;;;-1:-1:-1;;16058:34:137;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15969:130;;;:::o;5637:65::-;1334:13:22;:11;:13::i;:::-;5685:10:137::1;:8;:10::i;:::-;5637:65::o:0;9076:1025::-;5069:9;;:14;;:42;;;5099:12;5087:9;;:24;5069:42;5061:76;;;;-1:-1:-1;;;5061:76:137;;;;;;;:::i;:::-;2505:21:25::1;:19;:21::i;:::-;9185:1:137::2;9169:6;:13;:17;9161:39;;;::::0;-1:-1:-1;;;9161:39:137;;10477:2:206;9161:39:137::2;::::0;::::2;10459:21:206::0;10516:1;10496:18;;;10489:29;-1:-1:-1;;;10534:18:206;;;10527:39;10583:18;;9161:39:137::2;10275:332:206::0;9161:39:137::2;9211:21;9246:19:::0;9268:6:::2;9275:1;9268:9;;;;;;;;:::i;:::-;;;;;;;:15;;;9246:37;;9299:9;9294:596;9318:6;:13;9314:1;:17;9294:596;;;9352:19;9374:6;9381:1;9374:9;;;;;;;;:::i;:::-;;;;;;;9352:31;;9526:12;929:10:35::0;;850:96;9526:12:137::2;-1:-1:-1::0;;;;;9508:30:137::2;:6;:14;;;-1:-1:-1::0;;;;;9508:30:137::2;;9500:61;;;::::0;-1:-1:-1;;;9500:61:137;;10946:2:206;9500:61:137::2;::::0;::::2;10928:21:206::0;10985:2;10965:18;;;10958:30;-1:-1:-1;;;11004:18:206;;;10997:48;11062:18;;9500:61:137::2;10744:342:206::0;9500:61:137::2;9599:11;-1:-1:-1::0;;;;;9583:27:137::2;:6;:12;;;-1:-1:-1::0;;;;;9583:27:137::2;;9575:55;;;::::0;-1:-1:-1;;;9575:55:137;;11293:2:206;9575:55:137::2;::::0;::::2;11275:21:206::0;11332:2;11312:18;;;11305:30;-1:-1:-1;;;11351:18:206;;;11344:45;11406:18;;9575:55:137::2;11091:339:206::0;9575:55:137::2;9645:29;9667:6;9645:21;:29::i;:::-;9705:13;::::0;::::2;::::0;9688:30:::2;::::0;;::::2;:::i;:::-;9797:14;::::0;::::2;::::0;9777:18;;9688:30;;-1:-1:-1;;;;;;9738:141:137::2;::::0;929:10:35;-1:-1:-1;;;;;9738:141:137::2;;9813:6;:19;;;9834:6;:13;;;9849:6;:12;;;9738:141;;;;;;;9742:25:206::0;;;9798:2;9783:18;;9776:34;;;;-1:-1:-1;;;;;9846:32:206;9841:2;9826:18;;9819:60;9730:2;9715:18;;9540:345;9738:141:137::2;;;;;;;;-1:-1:-1::0;9333:3:137;::::2;::::0;::::2;:::i;:::-;;;;9294:596;;;;10007:1;9991:13;:17;9983:40;;;::::0;-1:-1:-1;;;9983:40:137;;12039:2:206;9983:40:137::2;::::0;::::2;12021:21:206::0;12078:2;12058:18;;;12051:30;-1:-1:-1;;;12097:18:206;;;12090:40;12147:18;;9983:40:137::2;11837:334:206::0;9983:40:137::2;10033:61;-1:-1:-1::0;;;;;10033:32:137;::::2;929:10:35::0;10080:13:137;10033:32:::2;:61::i;:::-;9151:950;;2547:20:25::1;1787:1:::0;3053:7;:22;2873:209;2553:143:136;-1:-1:-1;;;;;2658:18:136;;;2635:4;2658:18;;;:11;:18;;;;;;;;:31;;;;2553:143;;;;;:::o;10544:1512:137:-;1482:19:24;:17;:19::i;:::-;5069:9:137::1;::::0;:14;;:42:::1;;;5099:12;5087:9;;:24;5069:42;5061:76;;;;-1:-1:-1::0;;;5061:76:137::1;;;;;;;:::i;:::-;2505:21:25::2;:19;:21::i;:::-;929:10:35::0;1337:34:136::3;::::0;;;:20:::3;:34;::::0;;;;;::::3;;1329:59;;;;-1:-1:-1::0;;;1329:59:136::3;;;;;;;:::i;:::-;10733:13:137::0;;10764:14;10756:36:::4;;;::::0;-1:-1:-1;;;10756:36:137;;10477:2:206;10756:36:137::4;::::0;::::4;10459:21:206::0;10516:1;10496:18;;;10489:29;-1:-1:-1;;;10534:18:206;;;10527:39;10583:18;;10756:36:137::4;10275:332:206::0;10756:36:137::4;10803:21;10838:19:::0;10860:6:::4;10867:1;10860:9;;;;;;;;:::i;:::-;;;;;;;:15;;;10838:37;;10973:28;11016:10;11004:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;11004:23:137::4;;10973:54;;11056:30;11102:10;11089:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;11089:24:137::4;;11056:57;;11149:9;11144:693;11168:10;11164:1;:14;11144:693;;;11199:19;11221:6;11228:1;11221:9;;;;;;;;:::i;:::-;;;;;;;11199:31;;11429:11;-1:-1:-1::0;;;;;11413:27:137::4;:6;:12;;;-1:-1:-1::0;;;;;11413:27:137::4;;11405:55;;;::::0;-1:-1:-1;;;11405:55:137;;11293:2:206;11405:55:137::4;::::0;::::4;11275:21:206::0;11332:2;11312:18;;;11305:30;-1:-1:-1;;;11351:18:206;;;11344:45;11406:18;;11405:55:137::4;11091:339:206::0;11405:55:137::4;11482:47;11500:6;:14;;;11516:12;929:10:35::0;;850:96;11482:47:137::4;11474:81;;;::::0;-1:-1:-1;;;11474:81:137;;9392:2:206;11474:81:137::4;::::0;::::4;9374:21:206::0;9431:2;9411:18;;;9404:30;-1:-1:-1;;;9450:18:206;;;9443:51;9511:18;;11474:81:137::4;9190:345:206::0;11474:81:137::4;11570:29;11592:6;11570:21;:29::i;:::-;11630:13;::::0;::::4;::::0;11613:30:::4;::::0;;::::4;:::i;:::-;;;11734:28;:6;:18;;;:26;:28::i;:::-;11715:13;11729:1;11715:16;;;;;;;;:::i;:::-;:47;::::0;;::::4;:16;::::0;;::::4;::::0;;;;;;:47;11796:19;::::4;::::0;:30:::4;::::0;:28:::4;:30::i;:::-;11776:14;11791:1;11776:17;;;;;;;;:::i;:::-;:50;::::0;;::::4;:17;::::0;;::::4;::::0;;;;;;;:50;-1:-1:-1;11180:3:137;::::4;::::0;::::4;:::i;:::-;;;;11144:693;;;;11870:1;11854:13;:17;11846:40;;;::::0;-1:-1:-1;;;11846:40:137;;12039:2:206;11846:40:137::4;::::0;::::4;12021:21:206::0;12078:2;12058:18;;;12051:30;-1:-1:-1;;;12097:18:206;;;12090:40;12147:18;;11846:40:137::4;11837:334:206::0;11846:40:137::4;11896:61;-1:-1:-1::0;;;;;11896:32:137;::::4;929:10:35::0;11943:13:137;11896:32:::4;:61::i;:::-;-1:-1:-1::0;;;;;11972:77:137;::::4;929:10:35::0;-1:-1:-1;;;;;11972:77:137::4;;12019:13;12034:14;11972:77;;;;;;;:::i;:::-;;;;;;;;10702:1354;;;;;2547:20:25::2;1787:1:::0;3053:7;:22;2873:209;2071:101:22;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;5388:74:137:-:0;3279:19:23;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:23;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:23;1713:19:34;:23;;;3387:66:23;;-1:-1:-1;3436:12:23;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:23;;13553:2:206;3325:201:23;;;13535:21:206;13592:2;13572:18;;;13565:30;13631:34;13611:18;;;13604:62;-1:-1:-1;;;13682:18:206;;;13675:44;13736:19;;3325:201:23;13351:410:206;3325:201:23;3536:12;:16;;-1:-1:-1;;3536:16:23;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:23;;;;;3562:65;5439:16:137::1;:14;:16::i;:::-;3651:14:23::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:23;;;3721:14;;-1:-1:-1;13918:36:206;;3721:14:23;;13906:2:206;13891:18;3721:14:23;;;;;;;3269:483;5388:74:137:o;5570:61::-;1334:13:22;:11;:13::i;:::-;5616:8:137::1;:6;:8::i;4500:47::-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4500:47:137;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1500:202:136:-;1334:13:22;:11;:13::i;:::-;-1:-1:-1;;;;;1589:31:136;::::1;;::::0;;;:20:::1;:31;::::0;;;;;;;;:44;;-1:-1:-1;;1589:44:136::1;::::0;::::1;;::::0;;::::1;::::0;;;1648:47;;5647:41:206;;;1648:47:136::1;::::0;5620:18:206;1648:47:136::1;;;;;;;1500:202:::0;;:::o;15339:557:137:-;15402:10;15424:12;15559:6;:14;;;15599:6;:19;;;15644:6;:18;;;15688:6;:13;;;15727:6;:12;;;15523:234;;;;;;;;;;;-1:-1:-1;;;;;14280:15:206;;;14262:34;;14327:2;14312:18;;14305:34;;;;14370:2;14355:18;;14348:34;;;;14413:2;14398:18;;14391:34;14462:15;;;14456:3;14441:19;;14434:44;14211:3;14196:19;;13965:519;15523:234:137;;;;-1:-1:-1;;15523:234:137;;;;;;;;;15492:279;;15523:234;15492:279;;;;15462:310;;;14618:19:206;14653:12;15462:310:137;;;-1:-1:-1;;15462:310:137;;;;;;;;;15439:343;;15462:310;15439:343;;;;15818:18;;;;15852;;15838:33;;;;:13;:33;;;;;;;:44;15439:343;;-1:-1:-1;15799:90:137;;15439:343;15799:18;:90::i;:::-;15792:97;15339:557;-1:-1:-1;;;15339:557:137:o;7568:169::-;1334:13:22;:11;:13::i;:::-;7648:27:137::1;::::0;;;:13:::1;:27;::::0;;;;7641:34;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;7641:34:137::1;::::0;;7648:27;7641:34:::1;;::::0;::::1;7648:27:::0;7641:34:::1;:::i;:::-;;;7717:12;929:10:35::0;;850:96;7717:12:137::1;-1:-1:-1::0;;;;;7690:40:137::1;7703:12;7690:40;;;;;;;;;;7568:169:::0;:::o;8486:244::-;5069:9;;:14;;:42;;;5099:12;5087:9;;:24;5069:42;5061:76;;;;-1:-1:-1;;;5061:76:137;;;;;;;:::i;:::-;2505:21:25::1;:19;:21::i;:::-;8564:37:137::2;8578:6;8586;:14;;;8564:13;:37::i;:::-;8658:6;:14;;;-1:-1:-1::0;;;;;8616:107:137::2;8638:6;:18;;;8624:12;929:10:35::0;;850:96;8624:12:137::2;-1:-1:-1::0;;;;;8616:107:137::2;;8674:6;:19;;;8695:6;:13;;;8710:6;:12;;;8616:107;;;;;;;9742:25:206::0;;;9798:2;9783:18;;9776:34;;;;-1:-1:-1;;;;;9846:32:206;9841:2;9826:18;;9819:60;9730:2;9715:18;;9540:345;8616:107:137::2;;;;;;;;2547:20:25::1;1787:1:::0;3053:7;:22;2873:209;7212:114:137;1334:13:22;:11;:13::i;:::-;7273:9:137::1;:17:::0;;;7305:14:::1;::::0;7285:5;;7305:14:::1;::::0;;;::::1;7212:114:::0;:::o;6329:701::-;1334:13:22;:11;:13::i;:::-;6517:16:137::1;::::0;;;6563:1:::1;::::0;6488:26:::1;6543:21;6563:1:::0;6517:16;6543:21:::1;:::i;:::-;::::0;;;-1:-1:-1;;6611:168:137::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;6611:168:137;;::::1;::::0;;;;;;;;;;;;-1:-1:-1;6575:33:137;;;:13:::1;:33:::0;;;;;;;:204;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;6575:204:137::1;::::0;;;::::1;;::::0;;;;;6611:168;;6575:33;:204:::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;;6851:81;6889:12;929:10:35::0;;850:96;6889:12:137::1;-1:-1:-1::0;;;;;6851:37:137;::::1;::::0;6911:4:::1;6918:13:::0;6851:37:::1;:81::i;:::-;-1:-1:-1::0;;;;;6947:76:137;::::1;929:10:35::0;-1:-1:-1;;;;;6947:76:137::1;6961:18;6947:76;6995:13;6947:76;;;;5206:25:206::0;;5194:2;5179:18;;5060:177;6947:76:137::1;;;;;;;;6478:552;6329:701:::0;;;;:::o;8025:223::-;1334:13:22;:11;:13::i;:::-;8118:56:137::1;-1:-1:-1::0;;;;;8118:33:137;::::1;929:10:35::0;8166:7:137;8118:33:::1;:56::i;:::-;8189:52;::::0;5206:25:206;;;-1:-1:-1;;;;;8189:52:137;::::1;::::0;929:10:35;;8189:52:137::1;::::0;5194:2:206;5179:18;8189:52:137::1;;;;;;;8025:223:::0;;:::o;1776:229:136:-;-1:-1:-1;;;;;1850:31:136;;;;;;:20;:31;;;;;;;;1842:56;;;;-1:-1:-1;;;1842:56:136;;;;;;;:::i;:::-;929:10:35;1908:25:136;;;;:11;:25;;;;;;:37;;-1:-1:-1;;;;;;1908:37:136;-1:-1:-1;;;;;1908:37:136;;;;;;;;1960:38;;1908:37;;929:10:35;1960:38:136;;;1776:229;:::o;2321:198:22:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:22;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:22;;17082:2:206;2401:73:22::1;::::0;::::1;17064:21:206::0;17121:2;17101:18;;;17094:30;17160:34;17140:18;;;17133:62;-1:-1:-1;;;17211:18:206;;;17204:36;17257:19;;2401:73:22::1;16880:402:206::0;2401:73:22::1;2484:28;2503:8;2484:18;:28::i;14373:532:137:-:0;14458:4;;14501:19;14517:3;14501:13;:19;:::i;:::-;14474:46;-1:-1:-1;14567:23:137;14593:19;14609:3;14593:13;:19;:::i;:::-;14643;14665:27;;;:13;:27;;;;;;;;:45;;;;;;;;;;;14736:1;:20;;;14815:18;;;:26;;14373:532;-1:-1:-1;;;14373:532:137:o;2010:106:24:-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:24;;17863:2:206;2071:38:24;;;17845:21:206;17902:2;17882:18;;;17875:30;-1:-1:-1;;;17921:18:206;;;17914:46;17977:18;;2071:38:24;17661:340:206;2580:287:25;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:25;;18208:2:206;2704:63:25;;;18190:21:206;18247:2;18227:18;;;18220:30;18286:33;18266:18;;;18259:61;18337:18;;2704:63:25;18006:355:206;2704:63:25;1830:1;2842:7;:18;2580:287::o;12469:279:137:-;12551:29;12573:6;12551:21;:29::i;:::-;12650:1;12634:6;:13;;;:17;12626:46;;;;-1:-1:-1;;;12626:46:137;;18568:2:206;12626:46:137;;;18550:21:206;18607:2;18587:18;;;18580:30;-1:-1:-1;;;18626:18:206;;;18619:46;18682:18;;12626:46:137;18366:340:206;12626:46:137;12682:59;12716:9;12727:6;:13;;;12689:6;:12;;;-1:-1:-1;;;;;12682:33:137;;;:59;;;;;:::i;:::-;12469:279;;:::o;1599:130:22:-;1513:6;;-1:-1:-1;;;;;1513:6:22;929:10:35;1662:23:22;1654:68;;;;-1:-1:-1;;;1654:68:22;;18913:2:206;1654:68:22;;;18895:21:206;;;18932:18;;;18925:30;18991:34;18971:18;;;18964:62;19043:18;;1654:68:22;18711:356:206;2676:117:24;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:24::1;::::0;;2764:22:::1;929:10:35::0;2773:12:24::1;2764:22;::::0;-1:-1:-1;;;;;6520:32:206;;;6502:51;;6490:2;6475:18;2764:22:24::1;;;;;;;2676:117::o:0;12847:503:137:-;12993:19;13005:6;12993:11;:19::i;:::-;12985:45;;;;-1:-1:-1;;;12985:45:137;;19274:2:206;12985:45:137;;;19256:21:206;19313:2;19293:18;;;19286:30;-1:-1:-1;;;19332:18:206;;;19325:43;19385:18;;12985:45:137;19072:337:206;12985:45:137;13116:50;13126:6;:18;;;13146:6;:19;;;13116:9;:50::i;:::-;13115:51;13107:90;;;;-1:-1:-1;;;13107:90:137;;19616:2:206;13107:90:137;;;19598:21:206;19655:2;19635:18;;;19628:30;19694:28;19674:18;;;19667:56;19740:18;;13107:90:137;19414:350:206;13107:90:137;13291:52;13303:6;:18;;;13323:6;:19;;;13291:11;:52::i;812:186:33:-;932:58;;-1:-1:-1;;;;;19961:32:206;;932:58:33;;;19943:51:206;20010:18;;;20003:34;;;905:86:33;;925:5;;-1:-1:-1;;;955:23:33;19916:18:206;;932:58:33;;;;-1:-1:-1;;932:58:33;;;;;;;;;;;;;;-1:-1:-1;;;;;932:58:33;-1:-1:-1;;;;;;932:58:33;;;;;;;;;;905:19;:86::i;:::-;812:186;;;:::o;16807:182:44:-;16862:5;16896:15;16887:24;;;16879:74;;;;-1:-1:-1;;;16879:74:44;;20250:2:206;16879:74:44;;;20232:21:206;20289:2;20269:18;;;20262:30;20328:34;20308:18;;;20301:62;-1:-1:-1;;;20379:18:206;;;20372:35;20424:19;;16879:74:44;20048:401:206;16879:74:44;-1:-1:-1;16976:5:44;16807:182::o;16299:187::-;16355:6;16390:16;16381:25;;;16373:76;;;;-1:-1:-1;;;16373:76:44;;20656:2:206;16373:76:44;;;20638:21:206;20695:2;20675:18;;;20668:30;20734:34;20714:18;;;20707:62;-1:-1:-1;;;20785:18:206;;;20778:36;20831:19;;16373:76:44;20454:402:206;2673:187:22;2765:6;;;-1:-1:-1;;;;;2781:17:22;;;-1:-1:-1;;;;;;2781:17:22;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1003:95::-;5374:13:23;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:23;;;;;;;:::i;:::-;1065:26:22::1;:24;:26::i;2429:115:24:-:0;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:24::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:35::0;;850:96;1167:154:40;1258:4;1310;1281:25;1294:5;1301:4;1281:12;:25::i;:::-;:33;;1167:154;-1:-1:-1;;;;1167:154:40:o;1004:214:33:-;1142:68;;-1:-1:-1;;;;;21531:15:206;;;1142:68:33;;;21513:34:206;21583:15;;21563:18;;;21556:43;21615:18;;;21608:34;;;1115:96:33;;1135:5;;-1:-1:-1;;;1165:27:33;21448:18:206;;1142:68:33;21273:375:206;1115:96:33;1004:214;;;;:::o;2188:106:24:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:24;;21855:2:206;2246:41:24;;;21837:21:206;21894:2;21874:18;;;21867:30;-1:-1:-1;;;21913:18:206;;;21906:50;21973:18;;2246:41:24;21653:344:206;13556:332:137;13640:24;13667:19;13683:3;13667:13;:19;:::i;:::-;13640:46;-1:-1:-1;13696:23:137;13722:19;13738:3;13722:13;:19;:::i;:::-;13811:27;;;;:13;:27;;;;;;;;:45;;;;;;;;;;;;13860:1;:20;;;13811:70;;;13751:130;;-1:-1:-1;;13556:332:137:o;3704:717:33:-;4134:23;4160:69;4188:4;4160:69;;;;;;;;;;;;;;;;;4168:5;-1:-1:-1;;;;;4160:27:33;;;:69;;;;;:::i;:::-;4243:17;;4134:95;;-1:-1:-1;4243:21:33;4239:176;;4338:10;4327:30;;;;;;;;;;;;:::i;:::-;4319:85;;;;-1:-1:-1;;;4319:85:33;;22454:2:206;4319:85:33;;;22436:21:206;22493:2;22473:18;;;22466:30;22532:34;22512:18;;;22505:62;-1:-1:-1;;;22583:18:206;;;22576:40;22633:19;;4319:85:33;22252:406:206;1104:111:22;5374:13:23;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:23;;;;;;;:::i;:::-;1176:32:22::1;929:10:35::0;1176:18:22::1;:32::i;1945:290:40:-:0;2028:7;2070:4;2028:7;2084:116;2108:5;:12;2104:1;:16;2084:116;;;2156:33;2166:12;2180:5;2186:1;2180:8;;;;;;;;:::i;:::-;;;;;;;2156:9;:33::i;:::-;2141:48;-1:-1:-1;2122:3:40;;;;:::i;:::-;;;;2084:116;;;-1:-1:-1;2216:12:40;1945:290;-1:-1:-1;;;1945:290:40:o;4120:223:34:-;4253:12;4284:52;4306:6;4314:4;4320:1;4323:12;4284:21;:52::i;:::-;4277:59;4120:223;-1:-1:-1;;;;4120:223:34:o;8986:147:40:-;9049:7;9079:1;9075;:5;:51;;9207:13;9298:15;;;9333:4;9326:15;;;9379:4;9363:21;;9075:51;;;-1:-1:-1;9207:13:40;9298:15;;;9333:4;9326:15;9379:4;9363:21;;;8986:147::o;5177:446:34:-;5342:12;5399:5;5374:21;:30;;5366:81;;;;-1:-1:-1;;;5366:81:34;;22865:2:206;5366:81:34;;;22847:21:206;22904:2;22884:18;;;22877:30;22943:34;22923:18;;;22916:62;-1:-1:-1;;;22994:18:206;;;22987:36;23040:19;;5366:81:34;22663:402:206;5366:81:34;5458:12;5472:23;5499:6;-1:-1:-1;;;;;5499:11:34;5518:5;5525:4;5499:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5457:73;;;;5547:69;5574:6;5582:7;5591:10;5603:12;5547:26;:69::i;:::-;5540:76;5177:446;-1:-1:-1;;;;;;;5177:446:34:o;6795:628::-;6975:12;7003:7;6999:418;;;7030:10;:17;7051:1;7030:22;7026:286;;-1:-1:-1;;;;;1713:19:34;;;7237:60;;;;-1:-1:-1;;;7237:60:34;;23564:2:206;7237:60:34;;;23546:21:206;23603:2;23583:18;;;23576:30;23642:31;23622:18;;;23615:59;23691:18;;7237:60:34;23362:353:206;7237:60:34;-1:-1:-1;7332:10:34;7325:17;;6999:418;7373:33;7381:10;7393:12;8104:17;;:21;8100:379;;8332:10;8326:17;8388:15;8375:10;8371:2;8367:19;8360:44;8100:379;8455:12;8448:20;;-1:-1:-1;;;8448:20:34;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:127:206;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;295:18;280:34;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:275::-;475:2;469:9;540:2;521:13;;-1:-1:-1;;517:27:206;505:40;;575:18;560:34;;596:22;;;557:62;554:88;;;622:18;;:::i;:::-;658:2;651:22;404:275;;-1:-1:-1;404:275:206:o;684:173::-;752:20;;-1:-1:-1;;;;;801:31:206;;791:42;;781:70;;847:1;844;837:12;781:70;684:173;;;:::o;862:183::-;922:4;955:18;947:6;944:30;941:56;;;977:18;;:::i;:::-;-1:-1:-1;1022:1:206;1018:14;1034:4;1014:25;;862:183::o;1050:1234::-;1102:5;1150:4;1138:9;1133:3;1129:19;1125:30;1122:50;;;1168:1;1165;1158:12;1122:50;1190:22;;:::i;:::-;1181:31;;1248:9;1235:23;1228:5;1221:38;1278:2;1340;1329:9;1325:18;1312:32;1307:2;1300:5;1296:14;1289:56;1405:2;1394:9;1390:18;1377:32;1372:2;1365:5;1361:14;1354:56;1442:38;1476:2;1465:9;1461:18;1442:38;:::i;:::-;1437:2;1430:5;1426:14;1419:62;1532:3;1521:9;1517:19;1504:33;1560:18;1552:6;1549:30;1546:50;;;1592:1;1589;1582:12;1546:50;1615:22;;1668:4;1660:13;;1656:23;-1:-1:-1;1646:51:206;;1693:1;1690;1683:12;1646:51;1729:2;1716:16;1752:60;1768:43;1808:2;1768:43;:::i;:::-;1752:60;:::i;:::-;1846:15;;;1928:1;1924:10;;;;1916:19;;1912:28;;;1877:12;;;;1952:15;;;1949:35;;;1980:1;1977;1970:12;1949:35;2004:11;;;;2024:142;2040:6;2035:3;2032:15;2024:142;;;2106:17;;2094:30;;2057:12;;;;2144;;;;2024:142;;;2193:3;2182:15;;2175:30;-1:-1:-1;2238:39:206;;-1:-1:-1;;;2272:3:206;2257:19;;2238:39;:::i;:::-;2232:3;2225:5;2221:15;2214:64;1050:1234;;;;:::o;2289:342::-;2372:6;2425:2;2413:9;2404:7;2400:23;2396:32;2393:52;;;2441:1;2438;2431:12;2393:52;2481:9;2468:23;2514:18;2506:6;2503:30;2500:50;;;2546:1;2543;2536:12;2500:50;2569:56;2617:7;2608:6;2597:9;2593:22;2569:56;:::i;2636:180::-;2695:6;2748:2;2736:9;2727:7;2723:23;2719:32;2716:52;;;2764:1;2761;2754:12;2716:52;-1:-1:-1;2787:23:206;;2636:180;-1:-1:-1;2636:180:206:o;2821:250::-;2906:1;2916:113;2930:6;2927:1;2924:13;2916:113;;;3006:11;;;3000:18;2987:11;;;2980:39;2952:2;2945:10;2916:113;;;-1:-1:-1;;3063:1:206;3045:16;;3038:27;2821:250::o;3076:271::-;3118:3;3156:5;3150:12;3183:6;3178:3;3171:19;3199:76;3268:6;3261:4;3256:3;3252:14;3245:4;3238:5;3234:16;3199:76;:::i;:::-;3329:2;3308:15;-1:-1:-1;;3304:29:206;3295:39;;;;3336:4;3291:50;;3076:271;-1:-1:-1;;3076:271:206:o;3352:545::-;3531:2;3520:9;3513:21;3576:6;3570:13;3565:2;3554:9;3550:18;3543:41;3638:2;3630:6;3626:15;3620:22;3615:2;3604:9;3600:18;3593:50;3724:1;3720;3715:3;3711:11;3707:19;3701:2;3693:6;3689:15;3683:22;3679:48;3674:2;3663:9;3659:18;3652:76;3494:4;3775:2;3767:6;3763:15;3757:22;3817:4;3810;3799:9;3795:20;3788:34;3839:52;3886:3;3875:9;3871:19;3857:12;3839:52;:::i;3902:1153::-;4010:6;4041:2;4084;4072:9;4063:7;4059:23;4055:32;4052:52;;;4100:1;4097;4090:12;4052:52;4140:9;4127:23;4169:18;4210:2;4202:6;4199:14;4196:34;;;4226:1;4223;4216:12;4196:34;4264:6;4253:9;4249:22;4239:32;;4309:7;4302:4;4298:2;4294:13;4290:27;4280:55;;4331:1;4328;4321:12;4280:55;4367:2;4354:16;4390:60;4406:43;4446:2;4406:43;:::i;4390:60::-;4484:15;;;4566:1;4562:10;;;;4554:19;;4550:28;;;4515:12;;;;4590:19;;;4587:39;;;4622:1;4619;4612:12;4587:39;4654:2;4650;4646:11;4666:359;4682:6;4677:3;4674:15;4666:359;;;4768:3;4755:17;4804:2;4791:11;4788:19;4785:109;;;4848:1;4877:2;4873;4866:14;4785:109;4919:63;4974:7;4969:2;4955:11;4951:2;4947:20;4943:29;4919:63;:::i;:::-;4907:76;;-1:-1:-1;5003:12:206;;;;4699;;4666:359;;;-1:-1:-1;5044:5:206;3902:1153;-1:-1:-1;;;;;;;;3902:1153:206:o;5242:260::-;5310:6;5318;5371:2;5359:9;5350:7;5346:23;5342:32;5339:52;;;5387:1;5384;5377:12;5339:52;5410:29;5429:9;5410:29;:::i;:::-;5400:39;;5458:38;5492:2;5481:9;5477:18;5458:38;:::i;:::-;5448:48;;5242:260;;;;;:::o;5699:186::-;5758:6;5811:2;5799:9;5790:7;5786:23;5782:32;5779:52;;;5827:1;5824;5817:12;5779:52;5850:29;5869:9;5850:29;:::i;5890:461::-;6123:6;6112:9;6105:25;6166:6;6161:2;6150:9;6146:18;6139:34;6238:1;6234;6229:3;6225:11;6221:19;6213:6;6209:32;6204:2;6193:9;6189:18;6182:60;6278:3;6273:2;6262:9;6258:18;6251:31;6086:4;6299:46;6340:3;6329:9;6325:19;6317:6;6299:46;:::i;:::-;6291:54;5890:461;-1:-1:-1;;;;;;5890:461:206:o;6564:118::-;6650:5;6643:13;6636:21;6629:5;6626:32;6616:60;;6672:1;6669;6662:12;6687:315;6752:6;6760;6813:2;6801:9;6792:7;6788:23;6784:32;6781:52;;;6829:1;6826;6819:12;6781:52;6852:29;6871:9;6852:29;:::i;:::-;6842:39;;6931:2;6920:9;6916:18;6903:32;6944:28;6966:5;6944:28;:::i;:::-;6991:5;6981:15;;;6687:315;;;;;:::o;7007:975::-;7103:6;7111;7119;7127;7180:3;7168:9;7159:7;7155:23;7151:33;7148:53;;;7197:1;7194;7187:12;7148:53;7233:9;7220:23;7210:33;;7262:2;7283:38;7317:2;7306:9;7302:18;7283:38;:::i;:::-;7273:48;;7368:2;7357:9;7353:18;7340:32;7330:42;;7423:2;7412:9;7408:18;7395:32;7446:18;7487:2;7479:6;7476:14;7473:34;;;7503:1;7500;7493:12;7473:34;7541:6;7530:9;7526:22;7516:32;;7586:7;7579:4;7575:2;7571:13;7567:27;7557:55;;7608:1;7605;7598:12;7557:55;7644:2;7631:16;7666:2;7662;7659:10;7656:36;;;7672:18;;:::i;:::-;7714:53;7757:2;7738:13;;-1:-1:-1;;7734:27:206;7730:36;;7714:53;:::i;:::-;7701:66;;7790:2;7783:5;7776:17;7830:7;7825:2;7820;7816;7812:11;7808:20;7805:33;7802:53;;;7851:1;7848;7841:12;7802:53;7906:2;7901;7897;7893:11;7888:2;7881:5;7877:14;7864:45;7950:1;7945:2;7940;7933:5;7929:14;7925:23;7918:34;;7971:5;7961:15;;;;;7007:975;;;;;;;:::o;7987:254::-;8055:6;8063;8116:2;8104:9;8095:7;8091:23;8087:32;8084:52;;;8132:1;8129;8122:12;8084:52;8155:29;8174:9;8155:29;:::i;:::-;8145:39;8231:2;8216:18;;;;8203:32;;-1:-1:-1;;;7987:254:206:o;8246:248::-;8314:6;8322;8375:2;8363:9;8354:7;8350:23;8346:32;8343:52;;;8391:1;8388;8381:12;8343:52;-1:-1:-1;;8414:23:206;;;8484:2;8469:18;;;8456:32;;-1:-1:-1;8246:248:206:o;8499:345::-;8701:2;8683:21;;;8740:2;8720:18;;;8713:30;-1:-1:-1;;;8774:2:206;8759:18;;8752:51;8835:2;8820:18;;8499:345::o;8849:336::-;9051:2;9033:21;;;9090:2;9070:18;;;9063:30;-1:-1:-1;;;9124:2:206;9109:18;;9102:42;9176:2;9161:18;;8849:336::o;9890:380::-;9969:1;9965:12;;;;10012;;;10033:61;;10087:4;10079:6;10075:17;10065:27;;10033:61;10140:2;10132:6;10129:14;10109:18;10106:38;10103:161;;10186:10;10181:3;10177:20;10174:1;10167:31;10221:4;10218:1;10211:15;10249:4;10246:1;10239:15;10103:161;;9890:380;;;:::o;10612:127::-;10673:10;10668:3;10664:20;10661:1;10654:31;10704:4;10701:1;10694:15;10728:4;10725:1;10718:15;11435:127;11496:10;11491:3;11487:20;11484:1;11477:31;11527:4;11524:1;11517:15;11551:4;11548:1;11541:15;11567:125;11632:9;;;11653:10;;;11650:36;;;11666:18;;:::i;11697:135::-;11736:3;11757:17;;;11754:43;;11777:18;;:::i;:::-;-1:-1:-1;11824:1:206;11813:13;;11697:135::o;12176:1170::-;12438:2;12450:21;;;12520:13;;12423:18;;;12542:22;;;12390:4;;12617;;12595:2;12580:18;;;12644:15;;;12390:4;12687:180;12701:6;12698:1;12695:13;12687:180;;;12766:13;;12781:4;12762:24;12750:37;;12807:12;;;;12842:15;;;;12723:1;12716:9;12687:180;;;-1:-1:-1;;;12903:19:206;;;12883:18;;;12876:47;12973:13;;12995:21;;;13071:15;;;;13034:12;;;13106:1;13116:202;13132:8;13127:3;13124:17;13116:202;;;13205:15;;13222:6;13201:28;13187:43;;13291:17;;;;13252:14;;;;13160:1;13151:11;13116:202;;;-1:-1:-1;13335:5:206;;12176:1170;-1:-1:-1;;;;;;;12176:1170:206:o;14802:545::-;14904:2;14899:3;14896:11;14893:448;;;14940:1;14965:5;14961:2;14954:17;15010:4;15006:2;14996:19;15080:2;15068:10;15064:19;15061:1;15057:27;15051:4;15047:38;15116:4;15104:10;15101:20;15098:47;;;-1:-1:-1;15139:4:206;15098:47;15194:2;15189:3;15185:12;15182:1;15178:20;15172:4;15168:31;15158:41;;15249:82;15267:2;15260:5;15257:13;15249:82;;;15312:17;;;15293:1;15282:13;15249:82;;;15253:3;;;14802:545;;;:::o;15523:1352::-;15649:3;15643:10;15676:18;15668:6;15665:30;15662:56;;;15698:18;;:::i;:::-;15727:97;15817:6;15777:38;15809:4;15803:11;15777:38;:::i;:::-;15771:4;15727:97;:::i;:::-;15879:4;;15943:2;15932:14;;15960:1;15955:663;;;;16662:1;16679:6;16676:89;;;-1:-1:-1;16731:19:206;;;16725:26;16676:89;-1:-1:-1;;15480:1:206;15476:11;;;15472:24;15468:29;15458:40;15504:1;15500:11;;;15455:57;16778:81;;15925:944;;15955:663;14749:1;14742:14;;;14786:4;14773:18;;-1:-1:-1;;15991:20:206;;;16109:236;16123:7;16120:1;16117:14;16109:236;;;16212:19;;;16206:26;16191:42;;16304:27;;;;16272:1;16260:14;;;;16139:19;;16109:236;;;16113:3;16373:6;16364:7;16361:19;16358:201;;;16434:19;;;16428:26;-1:-1:-1;;16517:1:206;16513:14;;;16529:3;16509:24;16505:37;16501:42;16486:58;16471:74;;16358:201;-1:-1:-1;;;;;16605:1:206;16589:14;;;16585:22;16572:36;;-1:-1:-1;15523:1352:206:o;17287:127::-;17348:10;17343:3;17339:20;17336:1;17329:31;17379:4;17376:1;17369:15;17403:4;17400:1;17393:15;17419:120;17459:1;17485;17475:35;;17490:18;;:::i;:::-;-1:-1:-1;17524:9:206;;17419:120::o;17544:112::-;17576:1;17602;17592:35;;17607:18;;:::i;:::-;-1:-1:-1;17641:9:206;;17544:112::o;20861:407::-;21063:2;21045:21;;;21102:2;21082:18;;;21075:30;21141:34;21136:2;21121:18;;21114:62;-1:-1:-1;;;21207:2:206;21192:18;;21185:41;21258:3;21243:19;;20861:407::o;22002:245::-;22069:6;22122:2;22110:9;22101:7;22097:23;22093:32;22090:52;;;22138:1;22135;22128:12;22090:52;22170:9;22164:16;22189:28;22211:5;22189:28;:::i;23070:287::-;23199:3;23237:6;23231:13;23253:66;23312:6;23307:3;23300:4;23292:6;23288:17;23253:66;:::i;:::-;23335:16;;;;;23070:287;-1:-1:-1;;23070:287:206:o;23720:220::-;23869:2;23858:9;23851:21;23832:4;23889:45;23930:2;23919:9;23915:18;23907:6;23889:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "claim((uint256,uint256,uint256,address,bytes32[],address))": "a89a6ce8",
    "claimDelegated((uint256,uint256,uint256,address,bytes32[],address))": "11db149f",
    "claimMulti((uint256,uint256,uint256,address,bytes32[],address)[])": "4114d2ee",
    "claimMultiDelegated((uint256,uint256,uint256,address,bytes32[],address)[])": "6c0aa8d2",
    "delegations(address)": "bffe3486",
    "deleteWindow(uint256)": "9f5a9672",
    "getWindow(uint256)": "2ee70dc3",
    "hasDelegatedRewards(address)": "88a586e1",
    "initialize()": "8129fc1c",
    "isClaimed(uint256,uint256)": "f364c90c",
    "isRewardsDelegate(address,address)": "4ade6d5d",
    "lockBlock()": "4a63b3d3",
    "merkleWindows(uint256)": "891b0d71",
    "nextCreatedIndex()": "e2e441a3",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "removeRewardsDelegate()": "23928cdb",
    "renounceOwnership()": "715018a6",
    "setLock(uint256)": "d3e15747",
    "setRewardsDelegate(address)": "e0a59658",
    "setWhitelisted(address,bool)": "9281aa0b",
    "setWindow(uint256,address,bytes32,string)": "d4511868",
    "transferOwnership(address)": "f2fde38b",
    "unpause()": "3f4ba83a",
    "verifyClaim((uint256,uint256,uint256,address,bytes32[],address))": "9dd6af1b",
    "whitelistedDelegates(address)": "73d6125e",
    "withdrawRewards(address,uint256)": "d6ef7af0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"windowIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"ClaimDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8[]\",\"name\":\"windowIndexes\",\"type\":\"uint8[]\"},{\"indexed\":false,\"internalType\":\"uint16[]\",\"name\":\"accountIndexes\",\"type\":\"uint16[]\"}],\"name\":\"ClaimDelegatedMulti\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"windowIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"windowIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"name\":\"CreatedWindow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"DelegateAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"DelegateRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"DelegateWhitelistChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"windowIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"DeleteWindow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lockBlock\",\"type\":\"uint256\"}],\"name\":\"LockSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"WithdrawRewards\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"windowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accountIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct IMerkleDistributorCore.Claim\",\"name\":\"_claim\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"windowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accountIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct IMerkleDistributorCore.Claim\",\"name\":\"_claim\",\"type\":\"tuple\"}],\"name\":\"claimDelegated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"windowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accountIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct IMerkleDistributorCore.Claim[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"name\":\"claimMulti\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"windowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accountIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct IMerkleDistributorCore.Claim[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"name\":\"claimMultiDelegated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_windowIndex\",\"type\":\"uint256\"}],\"name\":\"deleteWindow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_windowIndex\",\"type\":\"uint256\"}],\"name\":\"getWindow\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"internalType\":\"struct IMerkleDistributorCore.Window\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"hasDelegatedRewards\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_windowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_accountIndex\",\"type\":\"uint256\"}],\"name\":\"isClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"isRewardsDelegate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"merkleWindows\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextCreatedIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeRewardsDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lock\",\"type\":\"uint256\"}],\"name\":\"setLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setRewardsDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_whitelist\",\"type\":\"bool\"}],\"name\":\"setWhitelisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"setWindow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"windowIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accountIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct IMerkleDistributorCore.Claim\",\"name\":\"_claim\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedDelegates\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Merkle trees are not validated in any way, so the system assumes the contract owner behaves honestly.\",\"kind\":\"dev\",\"methods\":{\"claim((uint256,uint256,uint256,address,bytes32[],address))\":{\"details\":\"unrecognised reward tokens in the claim, or those with zero value, will be ignored\"},\"claimMulti((uint256,uint256,uint256,address,bytes32[],address)[])\":{\"details\":\"Method will fail if any individual claims within the batch would fail,         or if multiple accounts or rewards are being claimed for\",\"params\":{\"claims\":\"array of claims to claim. Sender must always be the claimant\"}},\"claimMultiDelegated((uint256,uint256,uint256,address,bytes32[],address)[])\":{\"details\":\"All claims must be made for the same reward token         Most efficient is to have contiguous claims in passed array for the same account.         We only check that the sender is whitelisted, we do not check that they are specifically whitelisted         for a given user.\"},\"constructor\":{\"details\":\"prevent initializer being called in implementation contract\"},\"deleteWindow(uint256)\":{\"details\":\"Callable only by owner. Likely to be followed by a withdrawRewards call to clear contract state.\",\"params\":{\"_windowIndex\":\"merkle root index to delete.\"}},\"isClaimed(uint256,uint256)\":{\"details\":\"This method will only work as intended if all `accountIndex`'s are unique for a given `windowIndex`\",\"params\":{\"_accountIndex\":\"account index to check within window index.\",\"_windowIndex\":\"merkle root to check.\"},\"returns\":{\"_0\":\"True if claim has been executed already, False otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setLock(uint256)\":{\"details\":\"Callable only by owner.\",\"params\":{\"_lock\":\"block number until when the contract should be locked\"}},\"setWindow(uint256,address,bytes32,string)\":{\"details\":\"we do not check tokens deposited cover all claims for the window, it is assumed this has been checked by the caller.        Deposits are not segregated by window, so users may start claiming reward tokens still pending for other users in previous windows.\",\"params\":{\"_ipfsHash\":\"pointing to the merkle tree\",\"_merkleRoot\":\"for merkle tree generated for this window\",\"_rewardAmount\":\"total rewards across all users\",\"_rewardToken\":\"the token that will reward users\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"verifyClaim((uint256,uint256,uint256,address,bytes32[],address))\":{\"details\":\"order matters when hashing the leaf - including for struct parameters. Must align with merkle tree.\",\"params\":{\"_claim\":\"claim object describing rewards, accountIndex, account, window index, and merkle proof.\"},\"returns\":{\"valid\":\"True if leaf exists.\"}},\"withdrawRewards(address,uint256)\":{\"details\":\"Callable only by owner.\",\"params\":{\"_amount\":\"amount of rewards to withdraw.\",\"_rewardToken\":\"to withdraw from contract.\"}}},\"stateVariables\":{\"claimedBitMap\":{\"details\":\"windowIndex => accountIndex => bitMap. Allows 256 claims to be recorded per word stored.\"}},\"title\":\"MerkleDistributor contract.\",\"version\":1},\"userdoc\":{\"events\":{\"ClaimDelegatedMulti(address,address,uint8[],uint16[])\":{\"notice\":\"compressed event data for delegated batch claims.\"}},\"kind\":\"user\",\"methods\":{\"claim((uint256,uint256,uint256,address,bytes32[],address))\":{\"notice\":\"Claim rewards for account, as described by Claim input object.\"},\"claimMulti((uint256,uint256,uint256,address,bytes32[],address)[])\":{\"notice\":\"Batch claims to reduce gas versus individual submitting all claims.\"},\"claimMultiDelegated((uint256,uint256,uint256,address,bytes32[],address)[])\":{\"notice\":\"Makes multiple claims for users and sends to the delegate. Delegate must be whitelisted first.\"},\"delegations(address)\":{\"notice\":\"user address => delegate address\"},\"deleteWindow(uint256)\":{\"notice\":\"Delete merkle root at window index.\"},\"getWindow(uint256)\":{\"notice\":\"fetch the window object as a struct\"},\"hasDelegatedRewards(address)\":{\"notice\":\"has the user any active delegations\"},\"initialize()\":{\"notice\":\"Initializer for the contract\"},\"isClaimed(uint256,uint256)\":{\"notice\":\"Returns True if the claim for `accountIndex` has already been completed for the Merkle root at `windowIndex`.\"},\"isRewardsDelegate(address,address)\":{\"notice\":\"is the passed delegate whitelisted to collect rewards on behalf of the user\"},\"lockBlock()\":{\"notice\":\"Block until when the distributor is locked\"},\"merkleWindows(uint256)\":{\"notice\":\"incrementing index for each window\"},\"nextCreatedIndex()\":{\"notice\":\"Index of next created Merkle root.\"},\"pause()\":{\"notice\":\"see openzepplin docs for more info on pausable\"},\"removeRewardsDelegate()\":{\"notice\":\"sender removes the current delegate\"},\"setLock(uint256)\":{\"notice\":\"Set block to lock the contract\"},\"setRewardsDelegate(address)\":{\"notice\":\"set a new delegate or override an existing delegate\"},\"setWhitelisted(address,bool)\":{\"notice\":\"the owner must allow addresses to be delegates before they can be added\"},\"setWindow(uint256,address,bytes32,string)\":{\"notice\":\"Set merkle root for the next available window index and seed allocations.\"},\"verifyClaim((uint256,uint256,uint256,address,bytes32[],address))\":{\"notice\":\"Returns True if leaf described by {account, accountIndex, windowIndex, amount, token} is stored in Merkle root at given window index.\"},\"whitelistedDelegates(address)\":{\"notice\":\"list of addresses that are eligible for delegation\"},\"withdrawRewards(address,uint256)\":{\"notice\":\"Emergency method that transfers rewards out of the contract if the contract was configured improperly.\"}},\"notice\":\"Allows an owner to distribute any reward ERC20 to claimants according to Merkle roots. The owner can specify         multiple Merkle roots distributions with customized reward currencies.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/rewards/MerkleDistributor.sol\":\"MerkleDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@bridge/=src/modules/vedough-bridge/\",\":@forge-std/=lib/forge-std/src/\",\":@governance/=src/modules/governance/\",\":@interfaces/=src/interfaces/\",\":@mocks/=test/mocks/\",\":@oracles/=src/modules/reward-policies/\",\":@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":@pproxy/=lib/pie-proxy/contracts/\",\":@prv/=src/modules/PRV/\",\":@rewards/=src/modules/rewards/\",\":@src/=src/\",\":@test/=test/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":pie-proxy/=lib/pie-proxy/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x055fe4c1e942d42899298a11a5501ed8757b5247d914f500d902fd308f4a169f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://372b878d307d3eb3bd2948ad92653191f38fe0752069015a360466f9f64f6d23\",\"dweb:/ipfs/QmaAbXkUaTNWnG2pNJ3qfaM7nRbktzy7qiWbd1fFZbYvpT\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x5d2b99dff39b05ded4c8eb1298a983dd098cd3ca26869ead974178bd3372d760\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://622c91432052e2072391bc9bf61a610168ec015d1bec8e2bd831f3bb5f440b33\",\"dweb:/ipfs/QmUDrPGTut4VJtWLEbFCaqi1buuD2B6HT1rpCy1Tv43t7Z\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x5f83581950887be701a44c250c1c6e38e9d421809a56717dc99d1d216e5bc41a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45516064c5e566f9ca1f854cbf142c37d86ac4a771c3a92aeecbf160ec92133c\",\"dweb:/ipfs/QmR8a8iwevbt8dvpDhpskPSQsfs5kCL8Ztz1pLZLJfHf5Z\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x9d87a452fd41124dbdde32b867a211842f89e18ac37ab7c4cdaa5cf7eaa55095\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc297a5f432f2dbb803e56bdb5e35b516cf086211f28879d710dddced0e9c3ac\",\"dweb:/ipfs/QmcUgFjjmDiArzwnudEXtdMWJ4QJLiNS4MpKRVSNgc73B9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x81d69543a239854bf999e89d82c53f165b9d46a4fda48030a219f61b3d2562f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f276de446e5e9985aabfe4830463d4ac2f705b99b19233ccff36047e3798a8ba\",\"dweb:/ipfs/QmeLoALerb41ZY9D3mBN3V6EkwspG1PiQ5kcBFopeFHSVB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x8c3779e8eb813ea61cc427ef6331ce26480fd3b3e50cd09693a5684c544f8a20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b78242734070278c66466c020a664119cd089b87f19e4113c2dec691429c6f3\",\"dweb:/ipfs/QmU5PCFRbhxkyx1XqANQJGKoshho4zCaVap11T5VjUNYmv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/MerkleProofUpgradeable.sol\":{\"keccak256\":\"0xd79af954b1a93ef33804da8993e382a99447db991c8920e539a24d3e6442bfd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11d885bc43e9d64a601613fede24589811b670603dc8dfa14375d7df879f5c68\",\"dweb:/ipfs/QmbhXdV2hjQZGsApvEzG9uvQAskGhEbVN5WWjghyjNaR63\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"src/modules/rewards/DelegationRegistry.sol\":{\"keccak256\":\"0x03bc155734b0e500a69d62b4c2b6133dd22b18084f0185d294b4422bde0c2cd9\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://0cf02a157ce76a9fc38fcd4e434f76378d50bd69e3a900105943c413f25465f0\",\"dweb:/ipfs/Qmao482Y3ejV6i4UtxR3ooz2yxoJgp8Ckrmt4M5rb8UBLB\"]},\"src/modules/rewards/MerkleDistributor.sol\":{\"keccak256\":\"0x410de73c41bbd2f914a0a07c13c3937c700374e6d3d6154370d7b2d69588c7bc\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1792a250ef53c657c2a3c3c0325add3180db58f3a076d628f959b6d1f5c630d5\",\"dweb:/ipfs/QmXS1wDJujTBFcX9jKc8nsJaDLvyeHwwiEPxmtbRzLMi2x\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegatee",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "windowIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "accountIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimDelegated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint8[]",
              "name": "windowIndexes",
              "type": "uint8[]",
              "indexed": false
            },
            {
              "internalType": "uint16[]",
              "name": "accountIndexes",
              "type": "uint16[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimDelegatedMulti",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "windowIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "accountIndex",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Claimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "windowIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CreatedWindow",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelegateRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "whitelisted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateWhitelistChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "windowIndex",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DeleteWindow",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lockBlock",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "LockSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WithdrawRewards",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IMerkleDistributorCore.Claim",
              "name": "_claim",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "windowIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accountIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "merkleProof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [
            {
              "internalType": "struct IMerkleDistributorCore.Claim",
              "name": "_claim",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "windowIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accountIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "merkleProof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimDelegated"
        },
        {
          "inputs": [
            {
              "internalType": "struct IMerkleDistributorCore.Claim[]",
              "name": "claims",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "windowIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accountIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "merkleProof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimMulti"
        },
        {
          "inputs": [
            {
              "internalType": "struct IMerkleDistributorCore.Claim[]",
              "name": "claims",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "windowIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accountIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "merkleProof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimMultiDelegated"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegations",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_windowIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteWindow"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_windowIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWindow",
          "outputs": [
            {
              "internalType": "struct IMerkleDistributorCore.Window",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "ipfsHash",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasDelegatedRewards",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_windowIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_accountIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isClaimed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_delegate",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRewardsDelegate",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lockBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleWindows",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "ipfsHash",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextCreatedIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeRewardsDelegate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_lock",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLock"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_delegate",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardsDelegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_delegate",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_whitelist",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWhitelisted"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_rewardAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_merkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "_ipfsHash",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWindow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "struct IMerkleDistributorCore.Claim",
              "name": "_claim",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "windowIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accountIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "merkleProof",
                  "type": "bytes32[]"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "whitelistedDelegates",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawRewards"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claim((uint256,uint256,uint256,address,bytes32[],address))": {
            "details": "unrecognised reward tokens in the claim, or those with zero value, will be ignored"
          },
          "claimMulti((uint256,uint256,uint256,address,bytes32[],address)[])": {
            "details": "Method will fail if any individual claims within the batch would fail,         or if multiple accounts or rewards are being claimed for",
            "params": {
              "claims": "array of claims to claim. Sender must always be the claimant"
            }
          },
          "claimMultiDelegated((uint256,uint256,uint256,address,bytes32[],address)[])": {
            "details": "All claims must be made for the same reward token         Most efficient is to have contiguous claims in passed array for the same account.         We only check that the sender is whitelisted, we do not check that they are specifically whitelisted         for a given user."
          },
          "constructor": {
            "details": "prevent initializer being called in implementation contract"
          },
          "deleteWindow(uint256)": {
            "details": "Callable only by owner. Likely to be followed by a withdrawRewards call to clear contract state.",
            "params": {
              "_windowIndex": "merkle root index to delete."
            }
          },
          "isClaimed(uint256,uint256)": {
            "details": "This method will only work as intended if all `accountIndex`'s are unique for a given `windowIndex`",
            "params": {
              "_accountIndex": "account index to check within window index.",
              "_windowIndex": "merkle root to check."
            },
            "returns": {
              "_0": "True if claim has been executed already, False otherwise."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setLock(uint256)": {
            "details": "Callable only by owner.",
            "params": {
              "_lock": "block number until when the contract should be locked"
            }
          },
          "setWindow(uint256,address,bytes32,string)": {
            "details": "we do not check tokens deposited cover all claims for the window, it is assumed this has been checked by the caller.        Deposits are not segregated by window, so users may start claiming reward tokens still pending for other users in previous windows.",
            "params": {
              "_ipfsHash": "pointing to the merkle tree",
              "_merkleRoot": "for merkle tree generated for this window",
              "_rewardAmount": "total rewards across all users",
              "_rewardToken": "the token that will reward users"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "verifyClaim((uint256,uint256,uint256,address,bytes32[],address))": {
            "details": "order matters when hashing the leaf - including for struct parameters. Must align with merkle tree.",
            "params": {
              "_claim": "claim object describing rewards, accountIndex, account, window index, and merkle proof."
            },
            "returns": {
              "valid": "True if leaf exists."
            }
          },
          "withdrawRewards(address,uint256)": {
            "details": "Callable only by owner.",
            "params": {
              "_amount": "amount of rewards to withdraw.",
              "_rewardToken": "to withdraw from contract."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claim((uint256,uint256,uint256,address,bytes32[],address))": {
            "notice": "Claim rewards for account, as described by Claim input object."
          },
          "claimMulti((uint256,uint256,uint256,address,bytes32[],address)[])": {
            "notice": "Batch claims to reduce gas versus individual submitting all claims."
          },
          "claimMultiDelegated((uint256,uint256,uint256,address,bytes32[],address)[])": {
            "notice": "Makes multiple claims for users and sends to the delegate. Delegate must be whitelisted first."
          },
          "delegations(address)": {
            "notice": "user address => delegate address"
          },
          "deleteWindow(uint256)": {
            "notice": "Delete merkle root at window index."
          },
          "getWindow(uint256)": {
            "notice": "fetch the window object as a struct"
          },
          "hasDelegatedRewards(address)": {
            "notice": "has the user any active delegations"
          },
          "initialize()": {
            "notice": "Initializer for the contract"
          },
          "isClaimed(uint256,uint256)": {
            "notice": "Returns True if the claim for `accountIndex` has already been completed for the Merkle root at `windowIndex`."
          },
          "isRewardsDelegate(address,address)": {
            "notice": "is the passed delegate whitelisted to collect rewards on behalf of the user"
          },
          "lockBlock()": {
            "notice": "Block until when the distributor is locked"
          },
          "merkleWindows(uint256)": {
            "notice": "incrementing index for each window"
          },
          "nextCreatedIndex()": {
            "notice": "Index of next created Merkle root."
          },
          "pause()": {
            "notice": "see openzepplin docs for more info on pausable"
          },
          "removeRewardsDelegate()": {
            "notice": "sender removes the current delegate"
          },
          "setLock(uint256)": {
            "notice": "Set block to lock the contract"
          },
          "setRewardsDelegate(address)": {
            "notice": "set a new delegate or override an existing delegate"
          },
          "setWhitelisted(address,bool)": {
            "notice": "the owner must allow addresses to be delegates before they can be added"
          },
          "setWindow(uint256,address,bytes32,string)": {
            "notice": "Set merkle root for the next available window index and seed allocations."
          },
          "verifyClaim((uint256,uint256,uint256,address,bytes32[],address))": {
            "notice": "Returns True if leaf described by {account, accountIndex, windowIndex, amount, token} is stored in Merkle root at given window index."
          },
          "whitelistedDelegates(address)": {
            "notice": "list of addresses that are eligible for delegation"
          },
          "withdrawRewards(address,uint256)": {
            "notice": "Emergency method that transfers rewards out of the contract if the contract was configured improperly."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@bridge/=src/modules/vedough-bridge/",
        ":@forge-std/=lib/forge-std/src/",
        ":@governance/=src/modules/governance/",
        ":@interfaces/=src/interfaces/",
        ":@mocks/=test/mocks/",
        ":@oracles/=src/modules/reward-policies/",
        ":@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@oz/=lib/openzeppelin-contracts/contracts/",
        ":@pproxy/=lib/pie-proxy/contracts/",
        ":@prv/=src/modules/PRV/",
        ":@rewards/=src/modules/rewards/",
        ":@src/=src/",
        ":@test/=test/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":pie-proxy/=lib/pie-proxy/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/modules/rewards/MerkleDistributor.sol": "MerkleDistributor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x055fe4c1e942d42899298a11a5501ed8757b5247d914f500d902fd308f4a169f",
        "urls": [
          "bzz-raw://372b878d307d3eb3bd2948ad92653191f38fe0752069015a360466f9f64f6d23",
          "dweb:/ipfs/QmaAbXkUaTNWnG2pNJ3qfaM7nRbktzy7qiWbd1fFZbYvpT"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x5d2b99dff39b05ded4c8eb1298a983dd098cd3ca26869ead974178bd3372d760",
        "urls": [
          "bzz-raw://622c91432052e2072391bc9bf61a610168ec015d1bec8e2bd831f3bb5f440b33",
          "dweb:/ipfs/QmUDrPGTut4VJtWLEbFCaqi1buuD2B6HT1rpCy1Tv43t7Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x5f83581950887be701a44c250c1c6e38e9d421809a56717dc99d1d216e5bc41a",
        "urls": [
          "bzz-raw://45516064c5e566f9ca1f854cbf142c37d86ac4a771c3a92aeecbf160ec92133c",
          "dweb:/ipfs/QmR8a8iwevbt8dvpDhpskPSQsfs5kCL8Ztz1pLZLJfHf5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
        "keccak256": "0x9d87a452fd41124dbdde32b867a211842f89e18ac37ab7c4cdaa5cf7eaa55095",
        "urls": [
          "bzz-raw://fc297a5f432f2dbb803e56bdb5e35b516cf086211f28879d710dddced0e9c3ac",
          "dweb:/ipfs/QmcUgFjjmDiArzwnudEXtdMWJ4QJLiNS4MpKRVSNgc73B9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0x81d69543a239854bf999e89d82c53f165b9d46a4fda48030a219f61b3d2562f2",
        "urls": [
          "bzz-raw://f276de446e5e9985aabfe4830463d4ac2f705b99b19233ccff36047e3798a8ba",
          "dweb:/ipfs/QmeLoALerb41ZY9D3mBN3V6EkwspG1PiQ5kcBFopeFHSVB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x8c3779e8eb813ea61cc427ef6331ce26480fd3b3e50cd09693a5684c544f8a20",
        "urls": [
          "bzz-raw://7b78242734070278c66466c020a664119cd089b87f19e4113c2dec691429c6f3",
          "dweb:/ipfs/QmU5PCFRbhxkyx1XqANQJGKoshho4zCaVap11T5VjUNYmv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/MerkleProofUpgradeable.sol": {
        "keccak256": "0xd79af954b1a93ef33804da8993e382a99447db991c8920e539a24d3e6442bfd2",
        "urls": [
          "bzz-raw://11d885bc43e9d64a601613fede24589811b670603dc8dfa14375d7df879f5c68",
          "dweb:/ipfs/QmbhXdV2hjQZGsApvEzG9uvQAskGhEbVN5WWjghyjNaR63"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "src/modules/rewards/DelegationRegistry.sol": {
        "keccak256": "0x03bc155734b0e500a69d62b4c2b6133dd22b18084f0185d294b4422bde0c2cd9",
        "urls": [
          "bzz-raw://0cf02a157ce76a9fc38fcd4e434f76378d50bd69e3a900105943c413f25465f0",
          "dweb:/ipfs/Qmao482Y3ejV6i4UtxR3ooz2yxoJgp8Ckrmt4M5rb8UBLB"
        ],
        "license": "CC0-1.0"
      },
      "src/modules/rewards/MerkleDistributor.sol": {
        "keccak256": "0x410de73c41bbd2f914a0a07c13c3937c700374e6d3d6154370d7b2d69588c7bc",
        "urls": [
          "bzz-raw://1792a250ef53c657c2a3c3c0325add3180db58f3a076d628f959b6d1f5c630d5",
          "dweb:/ipfs/QmXS1wDJujTBFcX9jKc8nsJaDLvyeHwwiEPxmtbRzLMi2x"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/modules/rewards/MerkleDistributor.sol",
    "id": 64373,
    "exportedSymbols": {
      "DelegationRegistry": [63511],
      "IERC20": [30206],
      "IMerkleDistributorCore": [63623],
      "MerkleDistributor": [64372],
      "MerkleProof": [32376],
      "Ownable": [29136],
      "Pausable": [29432],
      "ReentrancyGuard": [29516],
      "SafeCast": [34839],
      "SafeERC20": [30745]
    },
    "nodeType": "SourceUnit",
    "src": "42:16060:137",
    "nodes": [
      {
        "id": 63513,
        "nodeType": "PragmaDirective",
        "src": "42:23:137",
        "nodes": [],
        "literals": ["solidity", "0.8", ".16"]
      },
      {
        "id": 63515,
        "nodeType": "ImportDirective",
        "src": "67:97:137",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "file": "@oz-upgradeable/security/PausableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64373,
        "sourceUnit": 29433,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63514,
              "name": "PausableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29432,
              "src": "75:19:137",
              "typeDescriptions": {}
            },
            "local": "Pausable",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63517,
        "nodeType": "ImportDirective",
        "src": "165:92:137",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@oz-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64373,
        "sourceUnit": 29137,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63516,
              "name": "OwnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29136,
              "src": "173:18:137",
              "typeDescriptions": {}
            },
            "local": "Ownable",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63519,
        "nodeType": "ImportDirective",
        "src": "258:118:137",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@oz-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64373,
        "sourceUnit": 29517,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63518,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29516,
              "src": "266:26:137",
              "typeDescriptions": {}
            },
            "local": "ReentrancyGuard",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63521,
        "nodeType": "ImportDirective",
        "src": "377:116:137",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/MerkleProofUpgradeable.sol",
        "file": "@oz-upgradeable/utils/cryptography/MerkleProofUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64373,
        "sourceUnit": 32377,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63520,
              "name": "MerkleProofUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32376,
              "src": "385:22:137",
              "typeDescriptions": {}
            },
            "local": "MerkleProof",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63523,
        "nodeType": "ImportDirective",
        "src": "494:109:137",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "@oz-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64373,
        "sourceUnit": 30746,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63522,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30745,
              "src": "502:20:137",
              "typeDescriptions": {}
            },
            "local": "SafeERC20",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63525,
        "nodeType": "ImportDirective",
        "src": "604:94:137",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "@oz-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64373,
        "sourceUnit": 30207,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63524,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30206,
              "src": "612:17:137",
              "typeDescriptions": {}
            },
            "local": "IERC20",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63527,
        "nodeType": "ImportDirective",
        "src": "699:67:137",
        "nodes": [],
        "absolutePath": "src/modules/rewards/DelegationRegistry.sol",
        "file": "@rewards/DelegationRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64373,
        "sourceUnit": 63512,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63526,
              "name": "DelegationRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63511,
              "src": "707:18:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63529,
        "nodeType": "ImportDirective",
        "src": "767:99:137",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol",
        "file": "@oz-upgradeable/utils/math/SafeCastUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64373,
        "sourceUnit": 34840,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63528,
              "name": "SafeCastUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34839,
              "src": "775:19:137",
              "typeDescriptions": {}
            },
            "local": "SafeCast",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63623,
        "nodeType": "ContractDefinition",
        "src": "979:2922:137",
        "nodes": [
          {
            "id": 63544,
            "nodeType": "StructDefinition",
            "src": "1484:182:137",
            "nodes": [],
            "canonicalName": "IMerkleDistributorCore.Claim",
            "members": [
              {
                "constant": false,
                "id": 63532,
                "mutability": "mutable",
                "name": "windowIndex",
                "nameLocation": "1515:11:137",
                "nodeType": "VariableDeclaration",
                "scope": 63544,
                "src": "1507:19:137",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 63531,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1507:7:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63534,
                "mutability": "mutable",
                "name": "accountIndex",
                "nameLocation": "1544:12:137",
                "nodeType": "VariableDeclaration",
                "scope": 63544,
                "src": "1536:20:137",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 63533,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1536:7:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63536,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1574:6:137",
                "nodeType": "VariableDeclaration",
                "scope": 63544,
                "src": "1566:14:137",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 63535,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1566:7:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63538,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "1598:5:137",
                "nodeType": "VariableDeclaration",
                "scope": 63544,
                "src": "1590:13:137",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 63537,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1590:7:137",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63541,
                "mutability": "mutable",
                "name": "merkleProof",
                "nameLocation": "1623:11:137",
                "nodeType": "VariableDeclaration",
                "scope": 63544,
                "src": "1613:21:137",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 63539,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 63540,
                  "nodeType": "ArrayTypeName",
                  "src": "1613:9:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63543,
                "mutability": "mutable",
                "name": "account",
                "nameLocation": "1652:7:137",
                "nodeType": "VariableDeclaration",
                "scope": 63544,
                "src": "1644:15:137",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 63542,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1644:7:137",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nameLocation": "1491:5:137",
            "scope": 63623,
            "visibility": "public"
          },
          {
            "id": 63553,
            "nodeType": "StructDefinition",
            "src": "2286:133:137",
            "nodes": [],
            "canonicalName": "IMerkleDistributorCore.Window",
            "members": [
              {
                "constant": false,
                "id": 63546,
                "mutability": "mutable",
                "name": "merkleRoot",
                "nameLocation": "2318:10:137",
                "nodeType": "VariableDeclaration",
                "scope": 63553,
                "src": "2310:18:137",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 63545,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2310:7:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63548,
                "mutability": "mutable",
                "name": "rewardAmount",
                "nameLocation": "2346:12:137",
                "nodeType": "VariableDeclaration",
                "scope": 63553,
                "src": "2338:20:137",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 63547,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2338:7:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63550,
                "mutability": "mutable",
                "name": "rewardToken",
                "nameLocation": "2376:11:137",
                "nodeType": "VariableDeclaration",
                "scope": 63553,
                "src": "2368:19:137",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 63549,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2368:7:137",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63552,
                "mutability": "mutable",
                "name": "ipfsHash",
                "nameLocation": "2404:8:137",
                "nodeType": "VariableDeclaration",
                "scope": 63553,
                "src": "2397:15:137",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 63551,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2397:6:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Window",
            "nameLocation": "2293:6:137",
            "scope": 63623,
            "visibility": "public"
          },
          {
            "id": 63567,
            "nodeType": "EventDefinition",
            "src": "2425:211:137",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "18bdb6adb84039f917775d1fb8e7b7e7737ad5915d12eef0e4654b85e18d07b4",
            "name": "Claimed",
            "nameLocation": "2431:7:137",
            "parameters": {
              "id": 63566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63555,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "2464:6:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63567,
                  "src": "2448:22:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63554,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2448:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63557,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "windowIndex",
                  "nameLocation": "2496:11:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63567,
                  "src": "2480:27:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2480:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63559,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2533:7:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63567,
                  "src": "2517:23:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2517:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63561,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "accountIndex",
                  "nameLocation": "2558:12:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63567,
                  "src": "2550:20:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63563,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "2588:12:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63567,
                  "src": "2580:20:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63565,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardToken",
                  "nameLocation": "2618:11:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63567,
                  "src": "2610:19:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2610:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2438:197:137"
            }
          },
          {
            "id": 63581,
            "nodeType": "EventDefinition",
            "src": "2642:221:137",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "3640ae807a520ec0bc4697693f4aa46578908b1271fe53e6aba6c958deca46dd",
            "name": "ClaimDelegated",
            "nameLocation": "2648:14:137",
            "parameters": {
              "id": 63580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63569,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegatee",
                  "nameLocation": "2688:9:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63581,
                  "src": "2672:25:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2672:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63571,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "windowIndex",
                  "nameLocation": "2723:11:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63581,
                  "src": "2707:27:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2707:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63573,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2760:7:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63581,
                  "src": "2744:23:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63575,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "accountIndex",
                  "nameLocation": "2785:12:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63581,
                  "src": "2777:20:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63577,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "2815:12:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63581,
                  "src": "2807:20:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2807:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63579,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardToken",
                  "nameLocation": "2845:11:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63581,
                  "src": "2837:19:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2837:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2662:200:137"
            }
          },
          {
            "id": 63594,
            "nodeType": "EventDefinition",
            "src": "3408:137:137",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 63582,
              "nodeType": "StructuredDocumentation",
              "src": "2869:534:137",
              "text": " @notice compressed event data for delegated batch claims.\n @dev    `accountIndexes` and `windowIndexes` are index aligned and can be used\n         as a composite key to find the full claim data off-chain.\n @param  delegate address of the who claimed the rewards\n @param  token address of the reward token - we only allow one token per call\n @param  windowIndexes array of window indexes for the claims.\n @dev    limited to 255 windows which is approx 21 years for 1 month windows"
            },
            "eventSelector": "71c65b912fe08d1b1795243b1bea9165b7cec11f16b2065f32528386a17e53fd",
            "name": "ClaimDelegatedMulti",
            "nameLocation": "3414:19:137",
            "parameters": {
              "id": 63593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63584,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegate",
                  "nameLocation": "3459:8:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63594,
                  "src": "3443:24:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3443:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63586,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3485:5:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63594,
                  "src": "3469:21:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3469:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63589,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "windowIndexes",
                  "nameLocation": "3500:13:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63594,
                  "src": "3492:21:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63587,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "3492:5:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 63588,
                    "nodeType": "ArrayTypeName",
                    "src": "3492:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63592,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "accountIndexes",
                  "nameLocation": "3524:14:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63594,
                  "src": "3515:23:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63590,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "3515:6:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 63591,
                    "nodeType": "ArrayTypeName",
                    "src": "3515:8:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3433:111:137"
            }
          },
          {
            "id": 63604,
            "nodeType": "EventDefinition",
            "src": "3551:137:137",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6785e968a284c8685ff9cf6eaa341524d5b9764def1cb1bc6e0dc1d62c4aeb4b",
            "name": "CreatedWindow",
            "nameLocation": "3557:13:137",
            "parameters": {
              "id": 63603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63596,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "windowIndex",
                  "nameLocation": "3596:11:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63604,
                  "src": "3580:27:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3580:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63598,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3625:5:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63604,
                  "src": "3609:21:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3609:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63600,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "3640:12:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63604,
                  "src": "3632:20:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3632:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63602,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "rewardToken",
                  "nameLocation": "3670:11:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63604,
                  "src": "3654:27:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3654:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3570:117:137"
            }
          },
          {
            "id": 63612,
            "nodeType": "EventDefinition",
            "src": "3693:84:137",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "fb0872526787ac1be379aa37eaa9913b47d6d50c3f5fe5ec67ffe4282493670e",
            "name": "WithdrawRewards",
            "nameLocation": "3699:15:137",
            "parameters": {
              "id": 63611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63606,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3731:5:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63612,
                  "src": "3715:21:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3715:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63608,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3746:6:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63612,
                  "src": "3738:14:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3738:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63610,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3770:5:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63612,
                  "src": "3754:21:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3754:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3714:62:137"
            }
          },
          {
            "id": 63618,
            "nodeType": "EventDefinition",
            "src": "3782:71:137",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8fea52000ecb40f2262c672496dfadccc9d6290439bac487e084de8c57682d66",
            "name": "DeleteWindow",
            "nameLocation": "3788:12:137",
            "parameters": {
              "id": 63617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63614,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "windowIndex",
                  "nameLocation": "3817:11:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63618,
                  "src": "3801:27:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3801:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63616,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3846:5:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63618,
                  "src": "3830:21:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3830:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3800:52:137"
            }
          },
          {
            "id": 63622,
            "nodeType": "EventDefinition",
            "src": "3858:41:137",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "c96ac8f962bbb0ee952304839108c72982a49173fa73e62ede62c943e10f5742",
            "name": "LockSet",
            "nameLocation": "3864:7:137",
            "parameters": {
              "id": 63621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63620,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "lockBlock",
                  "nameLocation": "3888:9:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63622,
                  "src": "3872:25:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3872:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3871:27:137"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IMerkleDistributorCore",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 63530,
          "nodeType": "StructuredDocumentation",
          "src": "868:109:137",
          "text": " @title IMerkleDistributorCore\n @notice events and structs used in the MerkleDistributor contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [63623],
        "name": "IMerkleDistributorCore",
        "nameLocation": "989:22:137",
        "scope": 64373,
        "usedErrors": []
      },
      {
        "id": 64372,
        "nodeType": "ContractDefinition",
        "src": "4269:11832:137",
        "nodes": [
          {
            "id": 63638,
            "nodeType": "UsingForDirective",
            "src": "4384:27:137",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 63635,
              "name": "SafeERC20",
              "nameLocations": ["4390:9:137"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30745,
              "src": "4390:9:137"
            },
            "typeName": {
              "id": 63637,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63636,
                "name": "IERC20",
                "nameLocations": ["4404:6:137"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30206,
                "src": "4404:6:137"
              },
              "referencedDeclaration": 30206,
              "src": "4404:6:137",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$30206",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "id": 63641,
            "nodeType": "UsingForDirective",
            "src": "4416:27:137",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 63639,
              "name": "SafeCast",
              "nameLocations": ["4422:8:137"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34839,
              "src": "4422:8:137"
            },
            "typeName": {
              "id": 63640,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4435:7:137",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 63647,
            "nodeType": "VariableDeclaration",
            "src": "4500:47:137",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 63642,
              "nodeType": "StructuredDocumentation",
              "src": "4449:46:137",
              "text": "@notice incrementing index for each window"
            },
            "functionSelector": "891b0d71",
            "mutability": "mutable",
            "name": "merkleWindows",
            "nameLocation": "4534:13:137",
            "scope": 64372,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Window_$63553_storage_$",
              "typeString": "mapping(uint256 => struct IMerkleDistributorCore.Window)"
            },
            "typeName": {
              "id": 63646,
              "keyType": {
                "id": 63643,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4508:7:137",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "4500:26:137",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Window_$63553_storage_$",
                "typeString": "mapping(uint256 => struct IMerkleDistributorCore.Window)"
              },
              "valueType": {
                "id": 63645,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 63644,
                  "name": "Window",
                  "nameLocations": ["4519:6:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63553,
                  "src": "4519:6:137"
                },
                "referencedDeclaration": 63553,
                "src": "4519:6:137",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Window_$63553_storage_ptr",
                  "typeString": "struct IMerkleDistributorCore.Window"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 63654,
            "nodeType": "VariableDeclaration",
            "src": "4743:69:137",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 63648,
              "nodeType": "StructuredDocumentation",
              "src": "4554:184:137",
              "text": " @notice Track which accounts have claimed for each window index.\n @dev windowIndex => accountIndex => bitMap. Allows 256 claims to be recorded per word stored."
            },
            "mutability": "mutable",
            "name": "claimedBitMap",
            "nameLocation": "4799:13:137",
            "scope": 64372,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 63653,
              "keyType": {
                "id": 63649,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4751:7:137",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "4743:47:137",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 63652,
                "keyType": {
                  "id": 63650,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4770:7:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "4762:27:137",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 63651,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4781:7:137",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 63657,
            "nodeType": "VariableDeclaration",
            "src": "4870:31:137",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 63655,
              "nodeType": "StructuredDocumentation",
              "src": "4819:46:137",
              "text": "@notice Index of next created Merkle root."
            },
            "functionSelector": "e2e441a3",
            "mutability": "mutable",
            "name": "nextCreatedIndex",
            "nameLocation": "4885:16:137",
            "scope": 64372,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63656,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4870:7:137",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 63660,
            "nodeType": "VariableDeclaration",
            "src": "4967:24:137",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 63658,
              "nodeType": "StructuredDocumentation",
              "src": "4908:54:137",
              "text": "@notice Block until when the distributor is locked"
            },
            "functionSelector": "4a63b3d3",
            "mutability": "mutable",
            "name": "lockBlock",
            "nameLocation": "4982:9:137",
            "scope": 64372,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63659,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4967:7:137",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 63677,
            "nodeType": "ModifierDefinition",
            "src": "5030:125:137",
            "nodes": [],
            "body": {
              "id": 63676,
              "nodeType": "Block",
              "src": "5051:104:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 63671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 63666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 63664,
                            "name": "lockBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63660,
                            "src": "5069:9:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 63665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5082:1:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5069:14:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 63670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 63667,
                            "name": "lockBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63660,
                            "src": "5087:9:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 63668,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5099:5:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 63669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5105:6:137",
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "5099:12:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5087:24:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5069:42:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4469737472696275746f72206973204c6f636b6564",
                        "id": 63672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5113:23:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40b3f1c4dbf7de96361060e14ec881438702107e0064fc06812f317f8f82bf96",
                          "typeString": "literal_string \"Distributor is Locked\""
                        },
                        "value": "Distributor is Locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40b3f1c4dbf7de96361060e14ec881438702107e0064fc06812f317f8f82bf96",
                          "typeString": "literal_string \"Distributor is Locked\""
                        }
                      ],
                      "id": 63663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "5061:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5061:76:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63674,
                  "nodeType": "ExpressionStatement",
                  "src": "5061:76:137"
                },
                {
                  "id": 63675,
                  "nodeType": "PlaceholderStatement",
                  "src": "5147:1:137"
                }
              ]
            },
            "documentation": {
              "id": 63661,
              "nodeType": "StructuredDocumentation",
              "src": "4998:27:137",
              "text": "===== MODIFIERS ======"
            },
            "name": "notLocked",
            "nameLocation": "5039:9:137",
            "parameters": {
              "id": 63662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5048:2:137"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 63685,
            "nodeType": "FunctionDefinition",
            "src": "5269:53:137",
            "nodes": [],
            "body": {
              "id": 63684,
              "nodeType": "Block",
              "src": "5283:39:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63681,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29286,
                      "src": "5293:20:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5293:22:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63683,
                  "nodeType": "ExpressionStatement",
                  "src": "5293:22:137"
                }
              ]
            },
            "documentation": {
              "id": 63678,
              "nodeType": "StructuredDocumentation",
              "src": "5196:68:137",
              "text": "@dev prevent initializer being called in implementation contract"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 63679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5280:2:137"
            },
            "returnParameters": {
              "id": 63680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5283:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63695,
            "nodeType": "FunctionDefinition",
            "src": "5388:74:137",
            "nodes": [],
            "body": {
              "id": 63694,
              "nodeType": "Block",
              "src": "5429:33:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63691,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29031,
                      "src": "5439:14:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5439:16:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63693,
                  "nodeType": "ExpressionStatement",
                  "src": "5439:16:137"
                }
              ]
            },
            "documentation": {
              "id": 63686,
              "nodeType": "StructuredDocumentation",
              "src": "5328:55:137",
              "text": " @notice Initializer for the contract"
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63689,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63688,
                  "name": "initializer",
                  "nameLocations": ["5417:11:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29207,
                  "src": "5417:11:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "5417:11:137"
              }
            ],
            "name": "initialize",
            "nameLocation": "5397:10:137",
            "parameters": {
              "id": 63687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5407:2:137"
            },
            "returnParameters": {
              "id": 63690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5429:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63705,
            "nodeType": "FunctionDefinition",
            "src": "5570:61:137",
            "nodes": [],
            "body": {
              "id": 63704,
              "nodeType": "Block",
              "src": "5606:25:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63701,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29410,
                      "src": "5616:6:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5616:8:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63703,
                  "nodeType": "ExpressionStatement",
                  "src": "5616:8:137"
                }
              ]
            },
            "documentation": {
              "id": 63696,
              "nodeType": "StructuredDocumentation",
              "src": "5507:58:137",
              "text": "@notice see openzepplin docs for more info on pausable"
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63699,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63698,
                  "name": "onlyOwner",
                  "nameLocations": ["5596:9:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29050,
                  "src": "5596:9:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "5596:9:137"
              }
            ],
            "name": "pause",
            "nameLocation": "5579:5:137",
            "parameters": {
              "id": 63697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5584:2:137"
            },
            "returnParameters": {
              "id": 63700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5606:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63714,
            "nodeType": "FunctionDefinition",
            "src": "5637:65:137",
            "nodes": [],
            "body": {
              "id": 63713,
              "nodeType": "Block",
              "src": "5675:27:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 63710,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29426,
                      "src": "5685:8:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 63711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5685:10:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63712,
                  "nodeType": "ExpressionStatement",
                  "src": "5685:10:137"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63708,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63707,
                  "name": "onlyOwner",
                  "nameLocations": ["5665:9:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29050,
                  "src": "5665:9:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "5665:9:137"
              }
            ],
            "name": "unpause",
            "nameLocation": "5646:7:137",
            "parameters": {
              "id": 63706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5653:2:137"
            },
            "returnParameters": {
              "id": 63709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5675:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63769,
            "nodeType": "FunctionDefinition",
            "src": "6329:701:137",
            "nodes": [],
            "body": {
              "id": 63768,
              "nodeType": "Block",
              "src": "6478:552:137",
              "nodes": [],
              "statements": [
                {
                  "assignments": [63729],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63729,
                      "mutability": "mutable",
                      "name": "currentWindowIndex",
                      "nameLocation": "6496:18:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 63768,
                      "src": "6488:26:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63728,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6488:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63731,
                  "initialValue": {
                    "id": 63730,
                    "name": "nextCreatedIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63657,
                    "src": "6517:16:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6488:45:137"
                },
                {
                  "expression": {
                    "id": 63734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63732,
                      "name": "nextCreatedIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63657,
                      "src": "6543:16:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 63733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6563:1:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6543:21:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63735,
                  "nodeType": "ExpressionStatement",
                  "src": "6543:21:137"
                },
                {
                  "expression": {
                    "id": 63745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 63736,
                        "name": "merkleWindows",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63647,
                        "src": "6575:13:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Window_$63553_storage_$",
                          "typeString": "mapping(uint256 => struct IMerkleDistributorCore.Window storage ref)"
                        }
                      },
                      "id": 63738,
                      "indexExpression": {
                        "id": 63737,
                        "name": "currentWindowIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63729,
                        "src": "6589:18:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6575:33:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Window_$63553_storage",
                        "typeString": "struct IMerkleDistributorCore.Window storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 63740,
                          "name": "_merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63721,
                          "src": "6644:11:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 63741,
                          "name": "_ipfsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63723,
                          "src": "6679:9:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 63742,
                          "name": "_rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63719,
                          "src": "6715:12:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 63743,
                          "name": "_rewardAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63717,
                          "src": "6755:13:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 63739,
                        "name": "Window",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63553,
                        "src": "6611:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Window_$63553_storage_ptr_$",
                          "typeString": "type(struct IMerkleDistributorCore.Window storage pointer)"
                        }
                      },
                      "id": 63744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": ["6632:10:137", "6669:8:137", "6702:11:137", "6741:12:137"],
                      "names": ["merkleRoot", "ipfsHash", "rewardToken", "rewardAmount"],
                      "nodeType": "FunctionCall",
                      "src": "6611:168:137",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Window_$63553_memory_ptr",
                        "typeString": "struct IMerkleDistributorCore.Window memory"
                      }
                    },
                    "src": "6575:204:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Window_$63553_storage",
                      "typeString": "struct IMerkleDistributorCore.Window storage ref"
                    }
                  },
                  "id": 63746,
                  "nodeType": "ExpressionStatement",
                  "src": "6575:204:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63751,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31056,
                          "src": "6889:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6889:12:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 63755,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6911:4:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MerkleDistributor_$64372",
                              "typeString": "contract MerkleDistributor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MerkleDistributor_$64372",
                              "typeString": "contract MerkleDistributor"
                            }
                          ],
                          "id": 63754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6903:7:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63753,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6903:7:137",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6903:13:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63757,
                        "name": "_rewardAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63717,
                        "src": "6918:13:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 63748,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63719,
                            "src": "6858:12:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 63747,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30206,
                          "src": "6851:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$30206_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 63749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6851:20:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$30206",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 63750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6872:16:137",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30522,
                      "src": "6851:37:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$30206_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$30206_$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 63758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6851:81:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63759,
                  "nodeType": "ExpressionStatement",
                  "src": "6851:81:137"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 63761,
                        "name": "currentWindowIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63729,
                        "src": "6961:18:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63762,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31056,
                          "src": "6981:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6981:12:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63764,
                        "name": "_rewardAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63717,
                        "src": "6995:13:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63765,
                        "name": "_rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63719,
                        "src": "7010:12:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63760,
                      "name": "CreatedWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63604,
                      "src": "6947:13:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,uint256,address)"
                      }
                    },
                    "id": 63766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6947:76:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63767,
                  "nodeType": "EmitStatement",
                  "src": "6942:81:137"
                }
              ]
            },
            "documentation": {
              "id": 63715,
              "nodeType": "StructuredDocumentation",
              "src": "5708:616:137",
              "text": " @notice Set merkle root for the next available window index and seed allocations.\n @param _rewardAmount total rewards across all users\n @param _rewardToken the token that will reward users\n @param _merkleRoot for merkle tree generated for this window\n @param _ipfsHash pointing to the merkle tree\n @dev   we do not check tokens deposited cover all claims for the window, it is assumed this has been checked by the caller.\n        Deposits are not segregated by window, so users may start claiming reward tokens still pending for other users in previous windows."
            },
            "functionSelector": "d4511868",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63726,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63725,
                  "name": "onlyOwner",
                  "nameLocations": ["6464:9:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29050,
                  "src": "6464:9:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "6464:9:137"
              }
            ],
            "name": "setWindow",
            "nameLocation": "6338:9:137",
            "parameters": {
              "id": 63724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63717,
                  "mutability": "mutable",
                  "name": "_rewardAmount",
                  "nameLocation": "6356:13:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63769,
                  "src": "6348:21:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6348:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63719,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "6379:12:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63769,
                  "src": "6371:20:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6371:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63721,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "6401:11:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63769,
                  "src": "6393:19:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 63720,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6393:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63723,
                  "mutability": "mutable",
                  "name": "_ipfsHash",
                  "nameLocation": "6428:9:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63769,
                  "src": "6414:23:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63722,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6414:6:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6347:91:137"
            },
            "returnParameters": {
              "id": 63727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6478:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63786,
            "nodeType": "FunctionDefinition",
            "src": "7212:114:137",
            "nodes": [],
            "body": {
              "id": 63785,
              "nodeType": "Block",
              "src": "7263:63:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 63779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63777,
                      "name": "lockBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63660,
                      "src": "7273:9:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63778,
                      "name": "_lock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63772,
                      "src": "7285:5:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7273:17:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63780,
                  "nodeType": "ExpressionStatement",
                  "src": "7273:17:137"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 63782,
                        "name": "_lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63772,
                        "src": "7313:5:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63781,
                      "name": "LockSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63622,
                      "src": "7305:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 63783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7305:14:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63784,
                  "nodeType": "EmitStatement",
                  "src": "7300:19:137"
                }
              ]
            },
            "documentation": {
              "id": 63770,
              "nodeType": "StructuredDocumentation",
              "src": "7036:171:137",
              "text": " @notice Set block to lock the contract\n @dev    Callable only by owner.\n @param  _lock block number until when the contract should be locked"
            },
            "functionSelector": "d3e15747",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63775,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63774,
                  "name": "onlyOwner",
                  "nameLocations": ["7253:9:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29050,
                  "src": "7253:9:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "7253:9:137"
              }
            ],
            "name": "setLock",
            "nameLocation": "7221:7:137",
            "parameters": {
              "id": 63773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63772,
                  "mutability": "mutable",
                  "name": "_lock",
                  "nameLocation": "7237:5:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63786,
                  "src": "7229:13:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7229:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7228:15:137"
            },
            "returnParameters": {
              "id": 63776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7263:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63806,
            "nodeType": "FunctionDefinition",
            "src": "7568:169:137",
            "nodes": [],
            "body": {
              "id": 63805,
              "nodeType": "Block",
              "src": "7631:106:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 63797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "7641:34:137",
                    "subExpression": {
                      "baseExpression": {
                        "id": 63794,
                        "name": "merkleWindows",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63647,
                        "src": "7648:13:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Window_$63553_storage_$",
                          "typeString": "mapping(uint256 => struct IMerkleDistributorCore.Window storage ref)"
                        }
                      },
                      "id": 63796,
                      "indexExpression": {
                        "id": 63795,
                        "name": "_windowIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63789,
                        "src": "7662:12:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7648:27:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Window_$63553_storage",
                        "typeString": "struct IMerkleDistributorCore.Window storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63798,
                  "nodeType": "ExpressionStatement",
                  "src": "7641:34:137"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 63800,
                        "name": "_windowIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63789,
                        "src": "7703:12:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63801,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31056,
                          "src": "7717:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7717:12:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63799,
                      "name": "DeleteWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63618,
                      "src": "7690:12:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 63803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7690:40:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63804,
                  "nodeType": "EmitStatement",
                  "src": "7685:45:137"
                }
              ]
            },
            "documentation": {
              "id": 63787,
              "nodeType": "StructuredDocumentation",
              "src": "7332:231:137",
              "text": " @notice Delete merkle root at window index.\n @dev    Callable only by owner. Likely to be followed by a withdrawRewards call to clear contract state.\n @param  _windowIndex merkle root index to delete."
            },
            "functionSelector": "9f5a9672",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63792,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63791,
                  "name": "onlyOwner",
                  "nameLocations": ["7621:9:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29050,
                  "src": "7621:9:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "7621:9:137"
              }
            ],
            "name": "deleteWindow",
            "nameLocation": "7577:12:137",
            "parameters": {
              "id": 63790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63789,
                  "mutability": "mutable",
                  "name": "_windowIndex",
                  "nameLocation": "7598:12:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63806,
                  "src": "7590:20:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7590:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7589:22:137"
            },
            "returnParameters": {
              "id": 63793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7631:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63833,
            "nodeType": "FunctionDefinition",
            "src": "8025:223:137",
            "nodes": [],
            "body": {
              "id": 63832,
              "nodeType": "Block",
              "src": "8108:140:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63820,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31056,
                          "src": "8152:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8152:12:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63822,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63811,
                        "src": "8166:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 63817,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63809,
                            "src": "8125:12:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 63816,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30206,
                          "src": "8118:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$30206_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 63818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8118:20:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$30206",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 63819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8139:12:137",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30496,
                      "src": "8118:33:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$30206_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$30206_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 63823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8118:56:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63824,
                  "nodeType": "ExpressionStatement",
                  "src": "8118:56:137"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63826,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31056,
                          "src": "8205:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8205:12:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63828,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63811,
                        "src": "8219:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63829,
                        "name": "_rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63809,
                        "src": "8228:12:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63825,
                      "name": "WithdrawRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63612,
                      "src": "8189:15:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 63830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8189:52:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63831,
                  "nodeType": "EmitStatement",
                  "src": "8184:57:137"
                }
              ]
            },
            "documentation": {
              "id": 63807,
              "nodeType": "StructuredDocumentation",
              "src": "7743:277:137",
              "text": " @notice Emergency method that transfers rewards out of the contract if the contract was configured improperly.\n @dev    Callable only by owner.\n @param  _rewardToken to withdraw from contract.\n @param  _amount amount of rewards to withdraw."
            },
            "functionSelector": "d6ef7af0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63814,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63813,
                  "name": "onlyOwner",
                  "nameLocations": ["8098:9:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29050,
                  "src": "8098:9:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "8098:9:137"
              }
            ],
            "name": "withdrawRewards",
            "nameLocation": "8034:15:137",
            "parameters": {
              "id": 63812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63809,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "8058:12:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63833,
                  "src": "8050:20:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8050:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63811,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8080:7:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63833,
                  "src": "8072:15:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8072:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8049:39:137"
            },
            "returnParameters": {
              "id": 63815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8108:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63866,
            "nodeType": "FunctionDefinition",
            "src": "8486:244:137",
            "nodes": [],
            "body": {
              "id": 63865,
              "nodeType": "Block",
              "src": "8554:176:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63845,
                        "name": "_claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63837,
                        "src": "8578:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                          "typeString": "struct IMerkleDistributorCore.Claim memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 63846,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63837,
                          "src": "8586:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 63847,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8593:7:137",
                        "memberName": "account",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63543,
                        "src": "8586:14:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                          "typeString": "struct IMerkleDistributorCore.Claim memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63844,
                      "name": "_processClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64196,
                      "src": "8564:13:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Claim_$63544_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct IMerkleDistributorCore.Claim memory,address)"
                      }
                    },
                    "id": 63848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8564:37:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63849,
                  "nodeType": "ExpressionStatement",
                  "src": "8564:37:137"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63851,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31056,
                          "src": "8624:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8624:12:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 63853,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63837,
                          "src": "8638:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 63854,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8645:11:137",
                        "memberName": "windowIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63532,
                        "src": "8638:18:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 63855,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63837,
                          "src": "8658:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 63856,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8665:7:137",
                        "memberName": "account",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63543,
                        "src": "8658:14:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 63857,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63837,
                          "src": "8674:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 63858,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8681:12:137",
                        "memberName": "accountIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63534,
                        "src": "8674:19:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 63859,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63837,
                          "src": "8695:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 63860,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8702:6:137",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63536,
                        "src": "8695:13:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 63861,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63837,
                          "src": "8710:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 63862,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8717:5:137",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63538,
                        "src": "8710:12:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 63850,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63567,
                      "src": "8616:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,uint256,address)"
                      }
                    },
                    "id": 63863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8616:107:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63864,
                  "nodeType": "EmitStatement",
                  "src": "8611:112:137"
                }
              ]
            },
            "documentation": {
              "id": 63834,
              "nodeType": "StructuredDocumentation",
              "src": "8294:187:137",
              "text": " @notice Claim rewards for account, as described by Claim input object.\n @dev    unrecognised reward tokens in the claim, or those with zero value, will be ignored"
            },
            "functionSelector": "a89a6ce8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63840,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63839,
                  "name": "notLocked",
                  "nameLocations": ["8531:9:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63677,
                  "src": "8531:9:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "8531:9:137"
              },
              {
                "id": 63842,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63841,
                  "name": "nonReentrant",
                  "nameLocations": ["8541:12:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29476,
                  "src": "8541:12:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "8541:12:137"
              }
            ],
            "name": "claim",
            "nameLocation": "8495:5:137",
            "parameters": {
              "id": 63838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63837,
                  "mutability": "mutable",
                  "name": "_claim",
                  "nameLocation": "8514:6:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63866,
                  "src": "8501:19:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                    "typeString": "struct IMerkleDistributorCore.Claim"
                  },
                  "typeName": {
                    "id": 63836,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63835,
                      "name": "Claim",
                      "nameLocations": ["8501:5:137"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63544,
                      "src": "8501:5:137"
                    },
                    "referencedDeclaration": 63544,
                    "src": "8501:5:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$63544_storage_ptr",
                      "typeString": "struct IMerkleDistributorCore.Claim"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8500:21:137"
            },
            "returnParameters": {
              "id": 63843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8554:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63975,
            "nodeType": "FunctionDefinition",
            "src": "9076:1025:137",
            "nodes": [],
            "body": {
              "id": 63974,
              "nodeType": "Block",
              "src": "9151:950:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 63879,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63871,
                            "src": "9169:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Claim_$63544_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IMerkleDistributorCore.Claim memory[] memory"
                            }
                          },
                          "id": 63880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9176:6:137",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9169:13:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 63881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9185:1:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9169:17:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20436c61696d73",
                        "id": 63883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9188:11:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edb8de79e3d7dd27e7a86534bbae4a8f8e7767cca5d66aa068c369658cd30f51",
                          "typeString": "literal_string \"No Claims\""
                        },
                        "value": "No Claims"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_edb8de79e3d7dd27e7a86534bbae4a8f8e7767cca5d66aa068c369658cd30f51",
                          "typeString": "literal_string \"No Claims\""
                        }
                      ],
                      "id": 63878,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9161:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9161:39:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63885,
                  "nodeType": "ExpressionStatement",
                  "src": "9161:39:137"
                },
                {
                  "assignments": [63887],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63887,
                      "mutability": "mutable",
                      "name": "batchedAmount",
                      "nameLocation": "9219:13:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 63974,
                      "src": "9211:21:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63886,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9211:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63889,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 63888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9235:1:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9211:25:137"
                },
                {
                  "assignments": [63891],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63891,
                      "mutability": "mutable",
                      "name": "rewardToken",
                      "nameLocation": "9254:11:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 63974,
                      "src": "9246:19:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 63890,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9246:7:137",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63896,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 63892,
                        "name": "claims",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63871,
                        "src": "9268:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Claim_$63544_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IMerkleDistributorCore.Claim memory[] memory"
                        }
                      },
                      "id": 63894,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 63893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9275:1:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9268:9:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                        "typeString": "struct IMerkleDistributorCore.Claim memory"
                      }
                    },
                    "id": 63895,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9278:5:137",
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 63538,
                    "src": "9268:15:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9246:37:137"
                },
                {
                  "body": {
                    "id": 63956,
                    "nodeType": "Block",
                    "src": "9338:552:137",
                    "statements": [
                      {
                        "assignments": [63910],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 63910,
                            "mutability": "mutable",
                            "name": "claimI",
                            "nameLocation": "9365:6:137",
                            "nodeType": "VariableDeclaration",
                            "scope": 63956,
                            "src": "9352:19:137",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                              "typeString": "struct IMerkleDistributorCore.Claim"
                            },
                            "typeName": {
                              "id": 63909,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 63908,
                                "name": "Claim",
                                "nameLocations": ["9352:5:137"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 63544,
                                "src": "9352:5:137"
                              },
                              "referencedDeclaration": 63544,
                              "src": "9352:5:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$63544_storage_ptr",
                                "typeString": "struct IMerkleDistributorCore.Claim"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 63914,
                        "initialValue": {
                          "baseExpression": {
                            "id": 63911,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63871,
                            "src": "9374:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Claim_$63544_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IMerkleDistributorCore.Claim memory[] memory"
                            }
                          },
                          "id": 63913,
                          "indexExpression": {
                            "id": 63912,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63898,
                            "src": "9381:1:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9374:9:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9352:31:137"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 63920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 63916,
                                  "name": "claimI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63910,
                                  "src": "9508:6:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                    "typeString": "struct IMerkleDistributorCore.Claim memory"
                                  }
                                },
                                "id": 63917,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9515:7:137",
                                "memberName": "account",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63543,
                                "src": "9508:14:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 63918,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31056,
                                  "src": "9526:10:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 63919,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9526:12:137",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "9508:30:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436c61696d616e7420213d2053656e646572",
                              "id": 63921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9540:20:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_640642eb191ffa4a01e39a177bf80ad9a79e547b5efc80b5a817bbc8ede1c56e",
                                "typeString": "literal_string \"Claimant != Sender\""
                              },
                              "value": "Claimant != Sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_640642eb191ffa4a01e39a177bf80ad9a79e547b5efc80b5a817bbc8ede1c56e",
                                "typeString": "literal_string \"Claimant != Sender\""
                              }
                            ],
                            "id": 63915,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "9500:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 63922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9500:61:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63923,
                        "nodeType": "ExpressionStatement",
                        "src": "9500:61:137"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 63928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 63925,
                                  "name": "claimI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63910,
                                  "src": "9583:6:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                    "typeString": "struct IMerkleDistributorCore.Claim memory"
                                  }
                                },
                                "id": 63926,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9590:5:137",
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63538,
                                "src": "9583:12:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 63927,
                                "name": "rewardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63891,
                                "src": "9599:11:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "9583:27:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d756c7469706c6520546f6b656e73",
                              "id": 63929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9612:17:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a30404d34bf49f2853c440516e19499f2ccb539ae60844e75aa5f73beb8c1660",
                                "typeString": "literal_string \"Multiple Tokens\""
                              },
                              "value": "Multiple Tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a30404d34bf49f2853c440516e19499f2ccb539ae60844e75aa5f73beb8c1660",
                                "typeString": "literal_string \"Multiple Tokens\""
                              }
                            ],
                            "id": 63924,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "9575:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 63930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9575:55:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63931,
                        "nodeType": "ExpressionStatement",
                        "src": "9575:55:137"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 63933,
                              "name": "claimI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63910,
                              "src": "9667:6:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                "typeString": "struct IMerkleDistributorCore.Claim memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                "typeString": "struct IMerkleDistributorCore.Claim memory"
                              }
                            ],
                            "id": 63932,
                            "name": "_verifyAndMarkClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64229,
                            "src": "9645:21:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Claim_$63544_memory_ptr_$returns$__$",
                              "typeString": "function (struct IMerkleDistributorCore.Claim memory)"
                            }
                          },
                          "id": 63934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9645:29:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63935,
                        "nodeType": "ExpressionStatement",
                        "src": "9645:29:137"
                      },
                      {
                        "expression": {
                          "id": 63939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 63936,
                            "name": "batchedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63887,
                            "src": "9688:13:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 63937,
                              "name": "claimI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63910,
                              "src": "9705:6:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                "typeString": "struct IMerkleDistributorCore.Claim memory"
                              }
                            },
                            "id": 63938,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9712:6:137",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63536,
                            "src": "9705:13:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9688:30:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 63940,
                        "nodeType": "ExpressionStatement",
                        "src": "9688:30:137"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 63942,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31056,
                                "src": "9763:10:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 63943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9763:12:137",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 63944,
                                "name": "claimI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63910,
                                "src": "9777:6:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                  "typeString": "struct IMerkleDistributorCore.Claim memory"
                                }
                              },
                              "id": 63945,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9784:11:137",
                              "memberName": "windowIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63532,
                              "src": "9777:18:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 63946,
                                "name": "claimI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63910,
                                "src": "9797:6:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                  "typeString": "struct IMerkleDistributorCore.Claim memory"
                                }
                              },
                              "id": 63947,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9804:7:137",
                              "memberName": "account",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63543,
                              "src": "9797:14:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 63948,
                                "name": "claimI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63910,
                                "src": "9813:6:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                  "typeString": "struct IMerkleDistributorCore.Claim memory"
                                }
                              },
                              "id": 63949,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9820:12:137",
                              "memberName": "accountIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63534,
                              "src": "9813:19:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 63950,
                                "name": "claimI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63910,
                                "src": "9834:6:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                  "typeString": "struct IMerkleDistributorCore.Claim memory"
                                }
                              },
                              "id": 63951,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9841:6:137",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63536,
                              "src": "9834:13:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 63952,
                                "name": "claimI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63910,
                                "src": "9849:6:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                  "typeString": "struct IMerkleDistributorCore.Claim memory"
                                }
                              },
                              "id": 63953,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9856:5:137",
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63538,
                              "src": "9849:12:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 63941,
                            "name": "Claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63567,
                            "src": "9738:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256,uint256,address)"
                            }
                          },
                          "id": 63954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9738:141:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63955,
                        "nodeType": "EmitStatement",
                        "src": "9733:146:137"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 63904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63901,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63898,
                      "src": "9314:1:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 63902,
                        "name": "claims",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63871,
                        "src": "9318:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Claim_$63544_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IMerkleDistributorCore.Claim memory[] memory"
                        }
                      },
                      "id": 63903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9325:6:137",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9318:13:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9314:17:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63957,
                  "initializationExpression": {
                    "assignments": [63898],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 63898,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9307:1:137",
                        "nodeType": "VariableDeclaration",
                        "scope": 63957,
                        "src": "9299:9:137",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 63897,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9299:7:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 63900,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 63899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9311:1:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9299:13:137"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 63906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9333:3:137",
                      "subExpression": {
                        "id": 63905,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63898,
                        "src": "9333:1:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 63907,
                    "nodeType": "ExpressionStatement",
                    "src": "9333:3:137"
                  },
                  "nodeType": "ForStatement",
                  "src": "9294:596:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 63959,
                          "name": "batchedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63887,
                          "src": "9991:13:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 63960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10007:1:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9991:17:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2052657761726473",
                        "id": 63962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10010:12:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9c68271c30c76e3eabb40553108e0dc687bbd0f78dd80bb5b62fdb86e39a46a",
                          "typeString": "literal_string \"No Rewards\""
                        },
                        "value": "No Rewards"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9c68271c30c76e3eabb40553108e0dc687bbd0f78dd80bb5b62fdb86e39a46a",
                          "typeString": "literal_string \"No Rewards\""
                        }
                      ],
                      "id": 63958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9983:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9983:40:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63964,
                  "nodeType": "ExpressionStatement",
                  "src": "9983:40:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 63969,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31056,
                          "src": "10066:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 63970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10066:12:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 63971,
                        "name": "batchedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63887,
                        "src": "10080:13:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 63966,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63891,
                            "src": "10040:11:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 63965,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30206,
                          "src": "10033:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$30206_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 63967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10033:19:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$30206",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 63968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10053:12:137",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30496,
                      "src": "10033:32:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$30206_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$30206_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 63972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10033:61:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63973,
                  "nodeType": "ExpressionStatement",
                  "src": "10033:61:137"
                }
              ]
            },
            "documentation": {
              "id": 63867,
              "nodeType": "StructuredDocumentation",
              "src": "8736:335:137",
              "text": " @notice Batch claims to reduce gas versus individual submitting all claims.\n @dev    Method will fail if any individual claims within the batch would fail,\n         or if multiple accounts or rewards are being claimed for\n @param  claims array of claims to claim. Sender must always be the claimant"
            },
            "functionSelector": "4114d2ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63874,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63873,
                  "name": "notLocked",
                  "nameLocations": ["9128:9:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63677,
                  "src": "9128:9:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "9128:9:137"
              },
              {
                "id": 63876,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63875,
                  "name": "nonReentrant",
                  "nameLocations": ["9138:12:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29476,
                  "src": "9138:12:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "9138:12:137"
              }
            ],
            "name": "claimMulti",
            "nameLocation": "9085:10:137",
            "parameters": {
              "id": 63872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63871,
                  "mutability": "mutable",
                  "name": "claims",
                  "nameLocation": "9111:6:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 63975,
                  "src": "9096:21:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Claim_$63544_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IMerkleDistributorCore.Claim[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63869,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 63868,
                        "name": "Claim",
                        "nameLocations": ["9096:5:137"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 63544,
                        "src": "9096:5:137"
                      },
                      "referencedDeclaration": 63544,
                      "src": "9096:5:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$63544_storage_ptr",
                        "typeString": "struct IMerkleDistributorCore.Claim"
                      }
                    },
                    "id": 63870,
                    "nodeType": "ArrayTypeName",
                    "src": "9096:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Claim_$63544_storage_$dyn_storage_ptr",
                      "typeString": "struct IMerkleDistributorCore.Claim[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9095:23:137"
            },
            "returnParameters": {
              "id": 63877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9151:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64125,
            "nodeType": "FunctionDefinition",
            "src": "10544:1512:137",
            "nodes": [],
            "body": {
              "id": 64124,
              "nodeType": "Block",
              "src": "10702:1354:137",
              "nodes": [],
              "statements": [
                {
                  "assignments": [63992],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63992,
                      "mutability": "mutable",
                      "name": "claimCount",
                      "nameLocation": "10720:10:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 64124,
                      "src": "10712:18:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63991,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10712:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63995,
                  "initialValue": {
                    "expression": {
                      "id": 63993,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63980,
                      "src": "10733:6:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Claim_$63544_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IMerkleDistributorCore.Claim memory[] memory"
                      }
                    },
                    "id": 63994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10740:6:137",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "10733:13:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10712:34:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 63997,
                          "name": "claimCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63992,
                          "src": "10764:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 63998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10777:1:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10764:14:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20436c61696d73",
                        "id": 64000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10780:11:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edb8de79e3d7dd27e7a86534bbae4a8f8e7767cca5d66aa068c369658cd30f51",
                          "typeString": "literal_string \"No Claims\""
                        },
                        "value": "No Claims"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_edb8de79e3d7dd27e7a86534bbae4a8f8e7767cca5d66aa068c369658cd30f51",
                          "typeString": "literal_string \"No Claims\""
                        }
                      ],
                      "id": 63996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "10756:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 64001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10756:36:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64002,
                  "nodeType": "ExpressionStatement",
                  "src": "10756:36:137"
                },
                {
                  "assignments": [64004],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64004,
                      "mutability": "mutable",
                      "name": "batchedAmount",
                      "nameLocation": "10811:13:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 64124,
                      "src": "10803:21:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64003,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10803:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64006,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 64005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10827:1:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10803:25:137"
                },
                {
                  "assignments": [64008],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64008,
                      "mutability": "mutable",
                      "name": "rewardToken",
                      "nameLocation": "10846:11:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 64124,
                      "src": "10838:19:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 64007,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10838:7:137",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64013,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 64009,
                        "name": "claims",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63980,
                        "src": "10860:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Claim_$63544_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IMerkleDistributorCore.Claim memory[] memory"
                        }
                      },
                      "id": 64011,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 64010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10867:1:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10860:9:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                        "typeString": "struct IMerkleDistributorCore.Claim memory"
                      }
                    },
                    "id": 64012,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10870:5:137",
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 63538,
                    "src": "10860:15:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10838:37:137"
                },
                {
                  "assignments": [64018],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64018,
                      "mutability": "mutable",
                      "name": "windowIndexes",
                      "nameLocation": "10988:13:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 64124,
                      "src": "10973:28:137",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 64016,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "10973:5:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 64017,
                        "nodeType": "ArrayTypeName",
                        "src": "10973:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64024,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64022,
                        "name": "claimCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63992,
                        "src": "11016:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 64021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11004:11:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint8[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 64019,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "11008:5:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 64020,
                        "nodeType": "ArrayTypeName",
                        "src": "11008:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      }
                    },
                    "id": 64023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11004:23:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                      "typeString": "uint8[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10973:54:137"
                },
                {
                  "assignments": [64029],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64029,
                      "mutability": "mutable",
                      "name": "accountIndexes",
                      "nameLocation": "11072:14:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 64124,
                      "src": "11056:30:137",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 64027,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "11056:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 64028,
                        "nodeType": "ArrayTypeName",
                        "src": "11056:8:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64035,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64033,
                        "name": "claimCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63992,
                        "src": "11102:10:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 64032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11089:12:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 64030,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "11093:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 64031,
                        "nodeType": "ArrayTypeName",
                        "src": "11093:8:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 64034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11089:24:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11056:57:137"
                },
                {
                  "body": {
                    "id": 64098,
                    "nodeType": "Block",
                    "src": "11185:652:137",
                    "statements": [
                      {
                        "assignments": [64048],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 64048,
                            "mutability": "mutable",
                            "name": "_claim",
                            "nameLocation": "11212:6:137",
                            "nodeType": "VariableDeclaration",
                            "scope": 64098,
                            "src": "11199:19:137",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                              "typeString": "struct IMerkleDistributorCore.Claim"
                            },
                            "typeName": {
                              "id": 64047,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 64046,
                                "name": "Claim",
                                "nameLocations": ["11199:5:137"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 63544,
                                "src": "11199:5:137"
                              },
                              "referencedDeclaration": 63544,
                              "src": "11199:5:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$63544_storage_ptr",
                                "typeString": "struct IMerkleDistributorCore.Claim"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 64052,
                        "initialValue": {
                          "baseExpression": {
                            "id": 64049,
                            "name": "claims",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63980,
                            "src": "11221:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Claim_$63544_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct IMerkleDistributorCore.Claim memory[] memory"
                            }
                          },
                          "id": 64051,
                          "indexExpression": {
                            "id": 64050,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64037,
                            "src": "11228:1:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11221:9:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11199:31:137"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 64057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 64054,
                                  "name": "_claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64048,
                                  "src": "11413:6:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                    "typeString": "struct IMerkleDistributorCore.Claim memory"
                                  }
                                },
                                "id": 64055,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11420:5:137",
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63538,
                                "src": "11413:12:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 64056,
                                "name": "rewardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64008,
                                "src": "11429:11:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "11413:27:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d756c7469706c6520546f6b656e73",
                              "id": 64058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11442:17:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a30404d34bf49f2853c440516e19499f2ccb539ae60844e75aa5f73beb8c1660",
                                "typeString": "literal_string \"Multiple Tokens\""
                              },
                              "value": "Multiple Tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a30404d34bf49f2853c440516e19499f2ccb539ae60844e75aa5f73beb8c1660",
                                "typeString": "literal_string \"Multiple Tokens\""
                              }
                            ],
                            "id": 64053,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "11405:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 64059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11405:55:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 64060,
                        "nodeType": "ExpressionStatement",
                        "src": "11405:55:137"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 64063,
                                    "name": "_claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 64048,
                                    "src": "11500:6:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                      "typeString": "struct IMerkleDistributorCore.Claim memory"
                                    }
                                  },
                                  "id": 64064,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11507:7:137",
                                  "memberName": "account",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 63543,
                                  "src": "11500:14:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 64065,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31056,
                                    "src": "11516:10:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 64066,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11516:12:137",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 64062,
                                "name": "isRewardsDelegate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63510,
                                "src": "11482:17:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 64067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11482:47:137",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "2177686974656c697374656420666f722075736572",
                              "id": 64068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11531:23:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38094f6ce24efd5029c611d15df27fc9c4dd4fdf3cf9044d5084ef607164503e",
                                "typeString": "literal_string \"!whitelisted for user\""
                              },
                              "value": "!whitelisted for user"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38094f6ce24efd5029c611d15df27fc9c4dd4fdf3cf9044d5084ef607164503e",
                                "typeString": "literal_string \"!whitelisted for user\""
                              }
                            ],
                            "id": 64061,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "11474:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 64069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11474:81:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 64070,
                        "nodeType": "ExpressionStatement",
                        "src": "11474:81:137"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 64072,
                              "name": "_claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64048,
                              "src": "11592:6:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                "typeString": "struct IMerkleDistributorCore.Claim memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                "typeString": "struct IMerkleDistributorCore.Claim memory"
                              }
                            ],
                            "id": 64071,
                            "name": "_verifyAndMarkClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64229,
                            "src": "11570:21:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Claim_$63544_memory_ptr_$returns$__$",
                              "typeString": "function (struct IMerkleDistributorCore.Claim memory)"
                            }
                          },
                          "id": 64073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11570:29:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 64074,
                        "nodeType": "ExpressionStatement",
                        "src": "11570:29:137"
                      },
                      {
                        "expression": {
                          "id": 64078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 64075,
                            "name": "batchedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64004,
                            "src": "11613:13:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 64076,
                              "name": "_claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64048,
                              "src": "11630:6:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                "typeString": "struct IMerkleDistributorCore.Claim memory"
                              }
                            },
                            "id": 64077,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11637:6:137",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63536,
                            "src": "11630:13:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11613:30:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 64079,
                        "nodeType": "ExpressionStatement",
                        "src": "11613:30:137"
                      },
                      {
                        "expression": {
                          "id": 64087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 64080,
                              "name": "windowIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64018,
                              "src": "11715:13:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                "typeString": "uint8[] memory"
                              }
                            },
                            "id": 64082,
                            "indexExpression": {
                              "id": 64081,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64037,
                              "src": "11729:1:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11715:16:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "expression": {
                                  "id": 64083,
                                  "name": "_claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64048,
                                  "src": "11734:6:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                    "typeString": "struct IMerkleDistributorCore.Claim memory"
                                  }
                                },
                                "id": 64084,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11741:11:137",
                                "memberName": "windowIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63532,
                                "src": "11734:18:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 64085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11753:7:137",
                              "memberName": "toUint8",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34076,
                              "src": "11734:26:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint8)"
                              }
                            },
                            "id": 64086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11734:28:137",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "11715:47:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 64088,
                        "nodeType": "ExpressionStatement",
                        "src": "11715:47:137"
                      },
                      {
                        "expression": {
                          "id": 64096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 64089,
                              "name": "accountIndexes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64029,
                              "src": "11776:14:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 64091,
                            "indexExpression": {
                              "id": 64090,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64037,
                              "src": "11791:1:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11776:17:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "expression": {
                                  "id": 64092,
                                  "name": "_claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64048,
                                  "src": "11796:6:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                    "typeString": "struct IMerkleDistributorCore.Claim memory"
                                  }
                                },
                                "id": 64093,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11803:12:137",
                                "memberName": "accountIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63534,
                                "src": "11796:19:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 64094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11816:8:137",
                              "memberName": "toUint16",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34051,
                              "src": "11796:28:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint16)"
                              }
                            },
                            "id": 64095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11796:30:137",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "11776:50:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 64097,
                        "nodeType": "ExpressionStatement",
                        "src": "11776:50:137"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 64042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64040,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64037,
                      "src": "11164:1:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 64041,
                      "name": "claimCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63992,
                      "src": "11168:10:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11164:14:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64099,
                  "initializationExpression": {
                    "assignments": [64037],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 64037,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11157:1:137",
                        "nodeType": "VariableDeclaration",
                        "scope": 64099,
                        "src": "11149:9:137",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 64036,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11149:7:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 64039,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 64038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11161:1:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11149:13:137"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 64044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11180:3:137",
                      "subExpression": {
                        "id": 64043,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64037,
                        "src": "11180:1:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 64045,
                    "nodeType": "ExpressionStatement",
                    "src": "11180:3:137"
                  },
                  "nodeType": "ForStatement",
                  "src": "11144:693:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 64101,
                          "name": "batchedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64004,
                          "src": "11854:13:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 64102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11870:1:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11854:17:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2052657761726473",
                        "id": 64104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11873:12:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9c68271c30c76e3eabb40553108e0dc687bbd0f78dd80bb5b62fdb86e39a46a",
                          "typeString": "literal_string \"No Rewards\""
                        },
                        "value": "No Rewards"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9c68271c30c76e3eabb40553108e0dc687bbd0f78dd80bb5b62fdb86e39a46a",
                          "typeString": "literal_string \"No Rewards\""
                        }
                      ],
                      "id": 64100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "11846:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 64105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11846:40:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64106,
                  "nodeType": "ExpressionStatement",
                  "src": "11846:40:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64111,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31056,
                          "src": "11929:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11929:12:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64113,
                        "name": "batchedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64004,
                        "src": "11943:13:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 64108,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64008,
                            "src": "11903:11:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 64107,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30206,
                          "src": "11896:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$30206_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 64109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11896:19:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$30206",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 64110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11916:12:137",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30496,
                      "src": "11896:32:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$30206_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$30206_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 64114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11896:61:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64115,
                  "nodeType": "ExpressionStatement",
                  "src": "11896:61:137"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64117,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31056,
                          "src": "11992:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11992:12:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64119,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64008,
                        "src": "12006:11:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64120,
                        "name": "windowIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64018,
                        "src": "12019:13:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        }
                      },
                      {
                        "id": 64121,
                        "name": "accountIndexes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64029,
                        "src": "12034:14:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      ],
                      "id": 64116,
                      "name": "ClaimDelegatedMulti",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63594,
                      "src": "11972:19:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_array$_t_uint16_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint8[] memory,uint16[] memory)"
                      }
                    },
                    "id": 64122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11972:77:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64123,
                  "nodeType": "EmitStatement",
                  "src": "11967:82:137"
                }
              ]
            },
            "documentation": {
              "id": 63976,
              "nodeType": "StructuredDocumentation",
              "src": "10107:432:137",
              "text": " @notice Makes multiple claims for users and sends to the delegate. Delegate must be whitelisted first.\n @dev    All claims must be made for the same reward token\n         Most efficient is to have contiguous claims in passed array for the same account.\n         We only check that the sender is whitelisted, we do not check that they are specifically whitelisted\n         for a given user."
            },
            "functionSelector": "6c0aa8d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63983,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63982,
                  "name": "whenNotPaused",
                  "nameLocations": ["10621:13:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29354,
                  "src": "10621:13:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "10621:13:137"
              },
              {
                "id": 63985,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63984,
                  "name": "notLocked",
                  "nameLocations": ["10643:9:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63677,
                  "src": "10643:9:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "10643:9:137"
              },
              {
                "id": 63987,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63986,
                  "name": "nonReentrant",
                  "nameLocations": ["10661:12:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29476,
                  "src": "10661:12:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "10661:12:137"
              },
              {
                "id": 63989,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63988,
                  "name": "onlyWhitelisted",
                  "nameLocations": ["10682:15:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63398,
                  "src": "10682:15:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "10682:15:137"
              }
            ],
            "name": "claimMultiDelegated",
            "nameLocation": "10553:19:137",
            "parameters": {
              "id": 63981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63980,
                  "mutability": "mutable",
                  "name": "claims",
                  "nameLocation": "10588:6:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 64125,
                  "src": "10573:21:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Claim_$63544_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IMerkleDistributorCore.Claim[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63978,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 63977,
                        "name": "Claim",
                        "nameLocations": ["10573:5:137"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 63544,
                        "src": "10573:5:137"
                      },
                      "referencedDeclaration": 63544,
                      "src": "10573:5:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$63544_storage_ptr",
                        "typeString": "struct IMerkleDistributorCore.Claim"
                      }
                    },
                    "id": 63979,
                    "nodeType": "ArrayTypeName",
                    "src": "10573:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Claim_$63544_storage_$dyn_storage_ptr",
                      "typeString": "struct IMerkleDistributorCore.Claim[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10572:23:137"
            },
            "returnParameters": {
              "id": 63990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10702:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64165,
            "nodeType": "FunctionDefinition",
            "src": "12062:401:137",
            "nodes": [],
            "body": {
              "id": 64164,
              "nodeType": "Block",
              "src": "12256:207:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64144,
                        "name": "_claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64128,
                        "src": "12280:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                          "typeString": "struct IMerkleDistributorCore.Claim memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64145,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31056,
                          "src": "12288:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12288:12:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                          "typeString": "struct IMerkleDistributorCore.Claim memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64143,
                      "name": "_processClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64196,
                      "src": "12266:13:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Claim_$63544_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (struct IMerkleDistributorCore.Claim memory,address)"
                      }
                    },
                    "id": 64147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12266:35:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64148,
                  "nodeType": "ExpressionStatement",
                  "src": "12266:35:137"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 64150,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31056,
                          "src": "12344:10:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 64151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12344:12:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 64152,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64128,
                          "src": "12358:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 64153,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12365:11:137",
                        "memberName": "windowIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63532,
                        "src": "12358:18:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 64154,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64128,
                          "src": "12378:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 64155,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12385:7:137",
                        "memberName": "account",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63543,
                        "src": "12378:14:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 64156,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64128,
                          "src": "12394:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 64157,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12401:12:137",
                        "memberName": "accountIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63534,
                        "src": "12394:19:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 64158,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64128,
                          "src": "12415:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 64159,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12422:6:137",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63536,
                        "src": "12415:13:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 64160,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64128,
                          "src": "12430:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 64161,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12437:5:137",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63538,
                        "src": "12430:12:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64149,
                      "name": "ClaimDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63581,
                      "src": "12316:14:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,uint256,address)"
                      }
                    },
                    "id": 64162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12316:140:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64163,
                  "nodeType": "EmitStatement",
                  "src": "12311:145:137"
                }
              ]
            },
            "functionSelector": "11db149f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 64131,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 64130,
                  "name": "whenNotPaused",
                  "nameLocations": ["12132:13:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29354,
                  "src": "12132:13:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "12132:13:137"
              },
              {
                "id": 64133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 64132,
                  "name": "notLocked",
                  "nameLocations": ["12154:9:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63677,
                  "src": "12154:9:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "12154:9:137"
              },
              {
                "id": 64135,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 64134,
                  "name": "nonReentrant",
                  "nameLocations": ["12172:12:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29476,
                  "src": "12172:12:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "12172:12:137"
              },
              {
                "id": 64137,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 64136,
                  "name": "onlyWhitelisted",
                  "nameLocations": ["12193:15:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63398,
                  "src": "12193:15:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "12193:15:137"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 64139,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64128,
                      "src": "12236:6:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                        "typeString": "struct IMerkleDistributorCore.Claim memory"
                      }
                    },
                    "id": 64140,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12243:7:137",
                    "memberName": "account",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 63543,
                    "src": "12236:14:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 64141,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 64138,
                  "name": "onlyWhitelistedFor",
                  "nameLocations": ["12217:18:137"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63385,
                  "src": "12217:18:137"
                },
                "nodeType": "ModifierInvocation",
                "src": "12217:34:137"
              }
            ],
            "name": "claimDelegated",
            "nameLocation": "12071:14:137",
            "parameters": {
              "id": 64129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64128,
                  "mutability": "mutable",
                  "name": "_claim",
                  "nameLocation": "12099:6:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 64165,
                  "src": "12086:19:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                    "typeString": "struct IMerkleDistributorCore.Claim"
                  },
                  "typeName": {
                    "id": 64127,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64126,
                      "name": "Claim",
                      "nameLocations": ["12086:5:137"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63544,
                      "src": "12086:5:137"
                    },
                    "referencedDeclaration": 63544,
                    "src": "12086:5:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$63544_storage_ptr",
                      "typeString": "struct IMerkleDistributorCore.Claim"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12085:21:137"
            },
            "returnParameters": {
              "id": 64142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12256:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64196,
            "nodeType": "FunctionDefinition",
            "src": "12469:279:137",
            "nodes": [],
            "body": {
              "id": 64195,
              "nodeType": "Block",
              "src": "12541:207:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64174,
                        "name": "_claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64168,
                        "src": "12573:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                          "typeString": "struct IMerkleDistributorCore.Claim memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                          "typeString": "struct IMerkleDistributorCore.Claim memory"
                        }
                      ],
                      "id": 64173,
                      "name": "_verifyAndMarkClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64229,
                      "src": "12551:21:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Claim_$63544_memory_ptr_$returns$__$",
                        "typeString": "function (struct IMerkleDistributorCore.Claim memory)"
                      }
                    },
                    "id": 64175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12551:29:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64176,
                  "nodeType": "ExpressionStatement",
                  "src": "12551:29:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 64178,
                            "name": "_claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64168,
                            "src": "12634:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                              "typeString": "struct IMerkleDistributorCore.Claim memory"
                            }
                          },
                          "id": 64179,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12641:6:137",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63536,
                          "src": "12634:13:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 64180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12650:1:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12634:17:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7468696e6720746f20436c61696d",
                        "id": 64182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12653:18:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f33f537c6956c9e2f6677f7cb9ecf053a542f1e1770480e31d0d4de66e7d5c3",
                          "typeString": "literal_string \"Nothing to Claim\""
                        },
                        "value": "Nothing to Claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f33f537c6956c9e2f6677f7cb9ecf053a542f1e1770480e31d0d4de66e7d5c3",
                          "typeString": "literal_string \"Nothing to Claim\""
                        }
                      ],
                      "id": 64177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "12626:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 64183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12626:46:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64184,
                  "nodeType": "ExpressionStatement",
                  "src": "12626:46:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64190,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64170,
                        "src": "12716:9:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 64191,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64168,
                          "src": "12727:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 64192,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12734:6:137",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63536,
                        "src": "12727:13:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 64186,
                              "name": "_claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64168,
                              "src": "12689:6:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                "typeString": "struct IMerkleDistributorCore.Claim memory"
                              }
                            },
                            "id": 64187,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12696:5:137",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63538,
                            "src": "12689:12:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 64185,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30206,
                          "src": "12682:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$30206_$",
                            "typeString": "type(contract IERC20Upgradeable)"
                          }
                        },
                        "id": 64188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12682:20:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$30206",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 64189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12703:12:137",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30496,
                      "src": "12682:33:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$30206_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$30206_$",
                        "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                      }
                    },
                    "id": 64193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12682:59:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64194,
                  "nodeType": "ExpressionStatement",
                  "src": "12682:59:137"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processClaim",
            "nameLocation": "12478:13:137",
            "parameters": {
              "id": 64171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64168,
                  "mutability": "mutable",
                  "name": "_claim",
                  "nameLocation": "12505:6:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 64196,
                  "src": "12492:19:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                    "typeString": "struct IMerkleDistributorCore.Claim"
                  },
                  "typeName": {
                    "id": 64167,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64166,
                      "name": "Claim",
                      "nameLocations": ["12492:5:137"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63544,
                      "src": "12492:5:137"
                    },
                    "referencedDeclaration": 63544,
                    "src": "12492:5:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$63544_storage_ptr",
                      "typeString": "struct IMerkleDistributorCore.Claim"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64170,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "12521:9:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 64196,
                  "src": "12513:17:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12513:7:137",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12491:40:137"
            },
            "returnParameters": {
              "id": 64172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12541:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64229,
            "nodeType": "FunctionDefinition",
            "src": "12847:503:137",
            "nodes": [],
            "body": {
              "id": 64228,
              "nodeType": "Block",
              "src": "12907:443:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64205,
                            "name": "_claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64200,
                            "src": "13005:6:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                              "typeString": "struct IMerkleDistributorCore.Claim memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                              "typeString": "struct IMerkleDistributorCore.Claim memory"
                            }
                          ],
                          "id": 64204,
                          "name": "verifyClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64357,
                          "src": "12993:11:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Claim_$63544_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct IMerkleDistributorCore.Claim memory) view returns (bool)"
                          }
                        },
                        "id": 64206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12993:19:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420436c61696d",
                        "id": 64207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13014:15:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5be338d047f7a683f56ff0d64586d11f2c15d3d5c5c84c7a0f724dae0afa598d",
                          "typeString": "literal_string \"Invalid Claim\""
                        },
                        "value": "Invalid Claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5be338d047f7a683f56ff0d64586d11f2c15d3d5c5c84c7a0f724dae0afa598d",
                          "typeString": "literal_string \"Invalid Claim\""
                        }
                      ],
                      "id": 64203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "12985:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 64208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12985:45:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64209,
                  "nodeType": "ExpressionStatement",
                  "src": "12985:45:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13115:51:137",
                        "subExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 64212,
                                "name": "_claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64200,
                                "src": "13126:6:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                  "typeString": "struct IMerkleDistributorCore.Claim memory"
                                }
                              },
                              "id": 64213,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13133:11:137",
                              "memberName": "windowIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63532,
                              "src": "13126:18:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 64214,
                                "name": "_claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64200,
                                "src": "13146:6:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                  "typeString": "struct IMerkleDistributorCore.Claim memory"
                                }
                              },
                              "id": 64215,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13153:12:137",
                              "memberName": "accountIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63534,
                              "src": "13146:19:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 64211,
                            "name": "isClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64311,
                            "src": "13116:9:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256,uint256) view returns (bool)"
                            }
                          },
                          "id": 64216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13116:50:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920436c61696d656420666f722057696e646f77",
                        "id": 64218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13168:28:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45a592f4a9c799facccdaa61ab644bb66241214795af8a81064e414696a92302",
                          "typeString": "literal_string \"Already Claimed for Window\""
                        },
                        "value": "Already Claimed for Window"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45a592f4a9c799facccdaa61ab644bb66241214795af8a81064e414696a92302",
                          "typeString": "literal_string \"Already Claimed for Window\""
                        }
                      ],
                      "id": 64210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "13107:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 64219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13107:90:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64220,
                  "nodeType": "ExpressionStatement",
                  "src": "13107:90:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 64222,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64200,
                          "src": "13303:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 64223,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13310:11:137",
                        "memberName": "windowIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63532,
                        "src": "13303:18:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 64224,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64200,
                          "src": "13323:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 64225,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13330:12:137",
                        "memberName": "accountIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63534,
                        "src": "13323:19:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 64221,
                      "name": "_setClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64267,
                      "src": "13291:11:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 64226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13291:52:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64227,
                  "nodeType": "ExpressionStatement",
                  "src": "13291:52:137"
                }
              ]
            },
            "documentation": {
              "id": 64197,
              "nodeType": "StructuredDocumentation",
              "src": "12754:88:137",
              "text": " @dev Verify claim is valid and mark it as completed in this contract."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyAndMarkClaimed",
            "nameLocation": "12856:21:137",
            "parameters": {
              "id": 64201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64200,
                  "mutability": "mutable",
                  "name": "_claim",
                  "nameLocation": "12891:6:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 64229,
                  "src": "12878:19:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                    "typeString": "struct IMerkleDistributorCore.Claim"
                  },
                  "typeName": {
                    "id": 64199,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64198,
                      "name": "Claim",
                      "nameLocations": ["12878:5:137"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63544,
                      "src": "12878:5:137"
                    },
                    "referencedDeclaration": 63544,
                    "src": "12878:5:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$63544_storage_ptr",
                      "typeString": "struct IMerkleDistributorCore.Claim"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12877:21:137"
            },
            "returnParameters": {
              "id": 64202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12907:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 64267,
            "nodeType": "FunctionDefinition",
            "src": "13556:332:137",
            "nodes": [],
            "body": {
              "id": 64266,
              "nodeType": "Block",
              "src": "13630:258:137",
              "nodes": [],
              "statements": [
                {
                  "assignments": [64238],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64238,
                      "mutability": "mutable",
                      "name": "claimedWordIndex",
                      "nameLocation": "13648:16:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 64266,
                      "src": "13640:24:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64237,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13640:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64242,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 64241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64239,
                      "name": "_accountIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64234,
                      "src": "13667:13:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "323536",
                      "id": 64240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13683:3:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "src": "13667:19:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13640:46:137"
                },
                {
                  "assignments": [64244],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64244,
                      "mutability": "mutable",
                      "name": "claimedBitIndex",
                      "nameLocation": "13704:15:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 64266,
                      "src": "13696:23:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13696:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64248,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 64247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64245,
                      "name": "_accountIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64234,
                      "src": "13722:13:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "323536",
                      "id": 64246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13738:3:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "src": "13722:19:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13696:45:137"
                },
                {
                  "expression": {
                    "id": 64264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 64249,
                          "name": "claimedBitMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63654,
                          "src": "13751:13:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 64252,
                        "indexExpression": {
                          "id": 64250,
                          "name": "_windowIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64232,
                          "src": "13765:12:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13751:27:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 64253,
                      "indexExpression": {
                        "id": 64251,
                        "name": "claimedWordIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64238,
                        "src": "13779:16:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13751:45:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 64263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 64254,
                            "name": "claimedBitMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63654,
                            "src": "13811:13:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 64256,
                          "indexExpression": {
                            "id": 64255,
                            "name": "_windowIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64232,
                            "src": "13825:12:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13811:27:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 64258,
                        "indexExpression": {
                          "id": 64257,
                          "name": "claimedWordIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64238,
                          "src": "13839:16:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13811:45:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "|",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 64261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31",
                              "id": 64259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13860:1:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<<",
                            "rightExpression": {
                              "id": 64260,
                              "name": "claimedBitIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64244,
                              "src": "13865:15:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13860:20:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 64262,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "13859:22:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13811:70:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13751:130:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64265,
                  "nodeType": "ExpressionStatement",
                  "src": "13751:130:137"
                }
              ]
            },
            "documentation": {
              "id": 64230,
              "nodeType": "StructuredDocumentation",
              "src": "13356:195:137",
              "text": " @dev Mark claim as completed for account with assigned `accountIndex`\n @param _windowIndex to claim against\n @param _accountIndex assigned when MerkleTree generated"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setClaimed",
            "nameLocation": "13565:11:137",
            "parameters": {
              "id": 64235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64232,
                  "mutability": "mutable",
                  "name": "_windowIndex",
                  "nameLocation": "13585:12:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 64267,
                  "src": "13577:20:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13577:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64234,
                  "mutability": "mutable",
                  "name": "_accountIndex",
                  "nameLocation": "13607:13:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 64267,
                  "src": "13599:21:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13599:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13576:45:137"
            },
            "returnParameters": {
              "id": 64236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13630:0:137"
            },
            "scope": 64372,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 64311,
            "nodeType": "FunctionDefinition",
            "src": "14373:532:137",
            "nodes": [],
            "body": {
              "id": 64310,
              "nodeType": "Block",
              "src": "14464:441:137",
              "nodes": [],
              "statements": [
                {
                  "assignments": [64278],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64278,
                      "mutability": "mutable",
                      "name": "claimedWordIndex",
                      "nameLocation": "14482:16:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 64310,
                      "src": "14474:24:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64277,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14474:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64282,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 64281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64279,
                      "name": "_accountIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64272,
                      "src": "14501:13:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "323536",
                      "id": 64280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14517:3:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "src": "14501:19:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14474:46:137"
                },
                {
                  "assignments": [64284],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64284,
                      "mutability": "mutable",
                      "name": "claimedBitIndex",
                      "nameLocation": "14575:15:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 64310,
                      "src": "14567:23:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64283,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14567:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64288,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 64287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64285,
                      "name": "_accountIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64272,
                      "src": "14593:13:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "323536",
                      "id": 64286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14609:3:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_256_by_1",
                        "typeString": "int_const 256"
                      },
                      "value": "256"
                    },
                    "src": "14593:19:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14567:45:137"
                },
                {
                  "assignments": [64290],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64290,
                      "mutability": "mutable",
                      "name": "claimedWord",
                      "nameLocation": "14651:11:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 64310,
                      "src": "14643:19:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64289,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14643:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64296,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 64291,
                        "name": "claimedBitMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63654,
                        "src": "14665:13:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 64293,
                      "indexExpression": {
                        "id": 64292,
                        "name": "_windowIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64270,
                        "src": "14679:12:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14665:27:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 64295,
                    "indexExpression": {
                      "id": 64294,
                      "name": "claimedWordIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64278,
                      "src": "14693:16:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14665:45:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14643:67:137"
                },
                {
                  "assignments": [64298],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64298,
                      "mutability": "mutable",
                      "name": "mask",
                      "nameLocation": "14728:4:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 64310,
                      "src": "14720:12:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64297,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14720:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64303,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31",
                          "id": 64299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14736:1:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<<",
                        "rightExpression": {
                          "id": 64300,
                          "name": "claimedBitIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64284,
                          "src": "14741:15:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14736:20:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 64302,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "14735:22:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14720:37:137"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 64308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 64306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 64304,
                        "name": "claimedWord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64290,
                        "src": "14815:11:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&",
                      "rightExpression": {
                        "id": 64305,
                        "name": "mask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64298,
                        "src": "14829:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14815:18:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 64307,
                      "name": "mask",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64298,
                      "src": "14837:4:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14815:26:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 64276,
                  "id": 64309,
                  "nodeType": "Return",
                  "src": "14808:33:137"
                }
              ]
            },
            "documentation": {
              "id": 64268,
              "nodeType": "StructuredDocumentation",
              "src": "13923:445:137",
              "text": " @notice Returns True if the claim for `accountIndex` has already been completed for the Merkle root at `windowIndex`.\n @dev    This method will only work as intended if all `accountIndex`'s are unique for a given `windowIndex`\n @param _windowIndex merkle root to check.\n @param _accountIndex account index to check within window index.\n @return True if claim has been executed already, False otherwise."
            },
            "functionSelector": "f364c90c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isClaimed",
            "nameLocation": "14382:9:137",
            "parameters": {
              "id": 64273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64270,
                  "mutability": "mutable",
                  "name": "_windowIndex",
                  "nameLocation": "14400:12:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 64311,
                  "src": "14392:20:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14392:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64272,
                  "mutability": "mutable",
                  "name": "_accountIndex",
                  "nameLocation": "14422:13:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 64311,
                  "src": "14414:21:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14414:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14391:45:137"
            },
            "returnParameters": {
              "id": 64276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64275,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64311,
                  "src": "14458:4:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64274,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14458:4:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14457:6:137"
            },
            "scope": 64372,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64357,
            "nodeType": "FunctionDefinition",
            "src": "15339:557:137",
            "nodes": [],
            "body": {
              "id": 64356,
              "nodeType": "Block",
              "src": "15414:482:137",
              "nodes": [],
              "statements": [
                {
                  "assignments": [64321],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64321,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "15432:4:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 64356,
                      "src": "15424:12:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 64320,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15424:7:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64343,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 64329,
                                      "name": "_claim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 64315,
                                      "src": "15559:6:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                        "typeString": "struct IMerkleDistributorCore.Claim memory"
                                      }
                                    },
                                    "id": 64330,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15566:7:137",
                                    "memberName": "account",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63543,
                                    "src": "15559:14:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 64331,
                                      "name": "_claim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 64315,
                                      "src": "15599:6:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                        "typeString": "struct IMerkleDistributorCore.Claim memory"
                                      }
                                    },
                                    "id": 64332,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15606:12:137",
                                    "memberName": "accountIndex",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63534,
                                    "src": "15599:19:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 64333,
                                      "name": "_claim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 64315,
                                      "src": "15644:6:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                        "typeString": "struct IMerkleDistributorCore.Claim memory"
                                      }
                                    },
                                    "id": 64334,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15651:11:137",
                                    "memberName": "windowIndex",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63532,
                                    "src": "15644:18:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 64335,
                                      "name": "_claim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 64315,
                                      "src": "15688:6:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                        "typeString": "struct IMerkleDistributorCore.Claim memory"
                                      }
                                    },
                                    "id": 64336,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15695:6:137",
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63536,
                                    "src": "15688:13:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 64337,
                                      "name": "_claim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 64315,
                                      "src": "15727:6:137",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                        "typeString": "struct IMerkleDistributorCore.Claim memory"
                                      }
                                    },
                                    "id": 64338,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15734:5:137",
                                    "memberName": "token",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63538,
                                    "src": "15727:12:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 64327,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "15523:3:137",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 64328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "15527:6:137",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "15523:10:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 64339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15523:234:137",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 64326,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "15492:9:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 64340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15492:279:137",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 64324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15462:5:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 64323,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "15462:5:137",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 64325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15468:6:137",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "15462:12:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 64341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15462:310:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 64322,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "15439:9:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 64342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15439:343:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15424:358:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 64346,
                          "name": "_claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64315,
                          "src": "15818:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                            "typeString": "struct IMerkleDistributorCore.Claim memory"
                          }
                        },
                        "id": 64347,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15825:11:137",
                        "memberName": "merkleProof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63541,
                        "src": "15818:18:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 64348,
                            "name": "merkleWindows",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63647,
                            "src": "15838:13:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Window_$63553_storage_$",
                              "typeString": "mapping(uint256 => struct IMerkleDistributorCore.Window storage ref)"
                            }
                          },
                          "id": 64351,
                          "indexExpression": {
                            "expression": {
                              "id": 64349,
                              "name": "_claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64315,
                              "src": "15852:6:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                                "typeString": "struct IMerkleDistributorCore.Claim memory"
                              }
                            },
                            "id": 64350,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15859:11:137",
                            "memberName": "windowIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63532,
                            "src": "15852:18:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15838:33:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Window_$63553_storage",
                            "typeString": "struct IMerkleDistributorCore.Window storage ref"
                          }
                        },
                        "id": 64352,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15872:10:137",
                        "memberName": "merkleRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63546,
                        "src": "15838:44:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 64353,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64321,
                        "src": "15884:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 64344,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32376,
                        "src": "15799:11:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProofUpgradeable_$32376_$",
                          "typeString": "type(library MerkleProofUpgradeable)"
                        }
                      },
                      "id": 64345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15811:6:137",
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31894,
                      "src": "15799:18:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 64354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15799:90:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 64319,
                  "id": 64355,
                  "nodeType": "Return",
                  "src": "15792:97:137"
                }
              ]
            },
            "documentation": {
              "id": 64312,
              "nodeType": "StructuredDocumentation",
              "src": "14911:423:137",
              "text": " @notice Returns True if leaf described by {account, accountIndex, windowIndex, amount, token} is stored in Merkle root at given window index.\n @param _claim claim object describing rewards, accountIndex, account, window index, and merkle proof.\n @dev order matters when hashing the leaf - including for struct parameters. Must align with merkle tree.\n @return valid True if leaf exists."
            },
            "functionSelector": "9dd6af1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyClaim",
            "nameLocation": "15348:11:137",
            "parameters": {
              "id": 64316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64315,
                  "mutability": "mutable",
                  "name": "_claim",
                  "nameLocation": "15373:6:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 64357,
                  "src": "15360:19:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Claim_$63544_memory_ptr",
                    "typeString": "struct IMerkleDistributorCore.Claim"
                  },
                  "typeName": {
                    "id": 64314,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64313,
                      "name": "Claim",
                      "nameLocations": ["15360:5:137"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63544,
                      "src": "15360:5:137"
                    },
                    "referencedDeclaration": 63544,
                    "src": "15360:5:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$63544_storage_ptr",
                      "typeString": "struct IMerkleDistributorCore.Claim"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15359:21:137"
            },
            "returnParameters": {
              "id": 64319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64318,
                  "mutability": "mutable",
                  "name": "valid",
                  "nameLocation": "15407:5:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 64357,
                  "src": "15402:10:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64317,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15402:4:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15401:12:137"
            },
            "scope": 64372,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64371,
            "nodeType": "FunctionDefinition",
            "src": "15969:130:137",
            "nodes": [],
            "body": {
              "id": 64370,
              "nodeType": "Block",
              "src": "16048:51:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 64366,
                      "name": "merkleWindows",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63647,
                      "src": "16065:13:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Window_$63553_storage_$",
                        "typeString": "mapping(uint256 => struct IMerkleDistributorCore.Window storage ref)"
                      }
                    },
                    "id": 64368,
                    "indexExpression": {
                      "id": 64367,
                      "name": "_windowIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64360,
                      "src": "16079:12:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16065:27:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Window_$63553_storage",
                      "typeString": "struct IMerkleDistributorCore.Window storage ref"
                    }
                  },
                  "functionReturnParameters": 64365,
                  "id": 64369,
                  "nodeType": "Return",
                  "src": "16058:34:137"
                }
              ]
            },
            "documentation": {
              "id": 64358,
              "nodeType": "StructuredDocumentation",
              "src": "15902:62:137",
              "text": " @notice fetch the window object as a struct"
            },
            "functionSelector": "2ee70dc3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWindow",
            "nameLocation": "15978:9:137",
            "parameters": {
              "id": 64361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64360,
                  "mutability": "mutable",
                  "name": "_windowIndex",
                  "nameLocation": "15996:12:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 64371,
                  "src": "15988:20:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15988:7:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15987:22:137"
            },
            "returnParameters": {
              "id": 64365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64364,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64371,
                  "src": "16033:13:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Window_$63553_memory_ptr",
                    "typeString": "struct IMerkleDistributorCore.Window"
                  },
                  "typeName": {
                    "id": 64363,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64362,
                      "name": "Window",
                      "nameLocations": ["16033:6:137"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63553,
                      "src": "16033:6:137"
                    },
                    "referencedDeclaration": 63553,
                    "src": "16033:6:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Window_$63553_storage_ptr",
                      "typeString": "struct IMerkleDistributorCore.Window"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16032:15:137"
            },
            "scope": 64372,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 63625,
              "name": "Ownable",
              "nameLocations": ["4299:7:137"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29136,
              "src": "4299:7:137"
            },
            "id": 63626,
            "nodeType": "InheritanceSpecifier",
            "src": "4299:7:137"
          },
          {
            "baseName": {
              "id": 63627,
              "name": "Pausable",
              "nameLocations": ["4308:8:137"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29432,
              "src": "4308:8:137"
            },
            "id": 63628,
            "nodeType": "InheritanceSpecifier",
            "src": "4308:8:137"
          },
          {
            "baseName": {
              "id": 63629,
              "name": "ReentrancyGuard",
              "nameLocations": ["4318:15:137"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29516,
              "src": "4318:15:137"
            },
            "id": 63630,
            "nodeType": "InheritanceSpecifier",
            "src": "4318:15:137"
          },
          {
            "baseName": {
              "id": 63631,
              "name": "DelegationRegistry",
              "nameLocations": ["4335:18:137"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63511,
              "src": "4335:18:137"
            },
            "id": 63632,
            "nodeType": "InheritanceSpecifier",
            "src": "4335:18:137"
          },
          {
            "baseName": {
              "id": 63633,
              "name": "IMerkleDistributorCore",
              "nameLocations": ["4355:22:137"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63623,
              "src": "4355:22:137"
            },
            "id": 63634,
            "nodeType": "InheritanceSpecifier",
            "src": "4355:22:137"
          }
        ],
        "canonicalName": "MerkleDistributor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 63624,
          "nodeType": "StructuredDocumentation",
          "src": "3903:365:137",
          "text": " @title  MerkleDistributor contract.\n @notice Allows an owner to distribute any reward ERC20 to claimants according to Merkle roots. The owner can specify\n         multiple Merkle roots distributions with customized reward currencies.\n @dev    The Merkle trees are not validated in any way, so the system assumes the contract owner behaves honestly."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [64372, 63623, 63511, 29516, 29432, 29136, 31071, 29305],
        "name": "MerkleDistributor",
        "nameLocation": "4278:17:137",
        "scope": 64373,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 137
}
